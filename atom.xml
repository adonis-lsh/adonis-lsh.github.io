<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>笨呆呆的编程之旅</title>
  
  <subtitle>笨呆呆的博客</subtitle>
  <link href="https://www.lishenghui.top/atom.xml" rel="self"/>
  
  <link href="https://www.lishenghui.top/"/>
  <updated>2021-06-09T11:52:41.914Z</updated>
  <id>https://www.lishenghui.top/</id>
  
  <author>
    <name>adonis-lsh</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>java_web 编写一个简单的超市管理系统</title>
    <link href="https://www.lishenghui.top/2020/07/14/java-web/"/>
    <id>https://www.lishenghui.top/2020/07/14/java-web/</id>
    <published>2020-07-14T03:25:57.000Z</published>
    <updated>2021-06-09T11:52:41.914Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-环境搭建-mac-os为例"><a href="#1-环境搭建-mac-os为例" class="headerlink" title="1 环境搭建(mac os为例)"></a>1 环境搭建(mac os为例)</h2><h3 id="1-1-tomcat环境搭建"><a href="#1-1-tomcat环境搭建" class="headerlink" title="1.1 tomcat环境搭建"></a>1.1 tomcat环境搭建</h3><ol><li>Mac 默认bash <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">open</span> ~/.bash_profile <span class="token comment"># 生效命令</span><span class="token builtin class-name">source</span> ~/.bash_profile <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre> Mac 默认zsh <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">open</span> ~/.zshrc<span class="token builtin class-name">source</span> ~/.zshrc <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>输入路径 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/Users/lishenghui/apache-tomcat-8.5.56/bin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>对目录进行权限设置 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token number">755</span> /Users/lishenghui/apache-tomcat-8.5.56/bin/*.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>验证目录 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token environment constant">$PATH</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>执行启动和关闭命令 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">startup.shshutdown.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>服务相关配置路径 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/config/server.xml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="1-2-maven-库的搭建"><a href="#1-2-maven-库的搭建" class="headerlink" title="1.2 maven 库的搭建"></a>1.2 maven 库的搭建</h3><ol><li>配置环境变量 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">M2_HOME</span><span class="token operator">=</span>/Users/lishenghui/apache-maven-3.6.3<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$M2_HOME</span>/bin:<span class="token environment constant">$PATH</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>指定本地仓库路径, 目录下新建文件夹repo, 配置文件 /conf/setting.xml , <pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localRepository</span><span class="token punctuation">></span></span>/Users/lishenghui/apache-maven-3.6.3/repo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localRepository</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>执行镜像(可以不设置,设置镜像以后,有一些比较新的库并不能拉下来), 在proxies节点下添加 <pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>proxy</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>optional<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>active</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>active</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>protocol</span><span class="token punctuation">></span></span>http<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>protocol</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>proxyuser<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>proxypass<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>host</span><span class="token punctuation">></span></span>proxy.host.net<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>host</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>port</span><span class="token punctuation">></span></span>80<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>port</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nonProxyHosts</span><span class="token punctuation">></span></span>local.netsome.host.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nonProxyHosts</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>proxy</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="1-3-MySql安装"><a href="#1-3-MySql安装" class="headerlink" title="1.3 MySql安装"></a>1.3 MySql安装</h3><ol><li>配置环境变量 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/usr/local/mysql/bin<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/usr/local/mysql/support-files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>现在mac设置面板里面关掉sql,然后测试命令 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> mysql.server start<span class="token function">sudo</span> mysql.server stop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h2 id="2-idea相关配置"><a href="#2-idea相关配置" class="headerlink" title="2 idea相关配置"></a>2 idea相关配置</h2><p>2,1 maven的配置,如图</p><p><img src="http://img.lishenghui.top/image-20200713143708778.png" alt="image-20200713143708778"></p><h2 id="3-创建项目"><a href="#3-创建项目" class="headerlink" title="3 创建项目"></a>3 创建项目</h2><h3 id="3-1-创建一个mven管理的web项目"><a href="#3-1-创建一个mven管理的web项目" class="headerlink" title="3.1 创建一个mven管理的web项目"></a>3.1 创建一个mven管理的web项目</h3><p><img src="http://img.lishenghui.top/image-20200713145448034.png" alt="image-20200713145448034"></p><p><img src="http://img.lishenghui.top/image-20200713145541009.png" alt="image-20200713145541009"></p><h3 id="3-2-添加第三方依赖"><a href="#3-2-添加第三方依赖" class="headerlink" title="3.2 添加第三方依赖"></a>3.2 添加第三方依赖</h3><p>在工程的pom.xml的dependencies阶段下添加如下依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.servlet.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jsp-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.70<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- JSTL是Java中的一个定制标记库集 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jstl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/taglibs/standard --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>taglibs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>standard<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>8.0.20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在bulids节点下添加</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3-创建工程目录"><a href="#3-3-创建工程目录" class="headerlink" title="3.3 创建工程目录"></a>3.3 创建工程目录</h3><p><img src="http://img.lishenghui.top/%E5%AE%A1%E6%89%B9%E7%BB%84%E4%BB%B6.svg" alt="审批组件"></p><p><img src="http://img.lishenghui.top/image-20200713151419547.png" alt="image-20200713151419547"></p><h3 id="3-4-创建并连接数据库"><a href="#3-4-创建并连接数据库" class="headerlink" title="3.4 创建并连接数据库"></a>3.4 创建并连接数据库</h3><ol><li>用PowerDesign或者其他工具设计相关的数据库,表字段,以及关联关系,生成并导出sql,然后执行脚本生成数据库</li><li>Navicat Premium 查看和设计数据库模型 <img src="http://img.lishenghui.top/image-20200713152740469.png" alt="image-20200713152740469"> 你可以选择文件设置导出或者从数据库导入</li></ol><p><img src="http://img.lishenghui.top/image-20200713152943876.png" alt="image-20200713152943876"></p><p>如图</p><p><img src="http://img.lishenghui.top/image-20200713153103718.png" alt="image-20200713153103718"></p><p>当然,测试数据库的链接,也可以通过idea自带的工具</p><p><img src="hhttp://img.lishenghui.top/image-20200713153311009.png" alt="image-20200713153311009"></p><h3 id="3-4-项目连接数据库"><a href="#3-4-项目连接数据库" class="headerlink" title="3.4 项目连接数据库"></a>3.4 项目连接数据库</h3><p>​ 在resources文件夹下创建一个db.properties文件,没有的话可以直接在main文件夹下新建问价夹,会出现自动提示,让你创建java和resources文件夹</p><pre class="line-numbers language-none"><code class="language-none">driver&#x3D;com.mysql.cj.jdbc.Driverurl&#x3D;jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;smbms?useSSL&#x3D;false&amp;useUnicode&#x3D;true&amp;characterEncoding&#x3D;utf-8&amp;serverTimezone&#x3D;Asia&#x2F;Shanghaiuser&#x3D;rootpassword&#x3D;a12345678<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>​ 编写连接数据库的工具类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">smbms<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token punctuation">.</span>dao</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Properties</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseDao</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> driver<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> url<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> user<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Properties</span> properties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">BaseDao</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">"/db.properties"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            properties<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        driver <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        url <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        password <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>            connection <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> connection<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ResultSet</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> connection<span class="token punctuation">,</span> <span class="token class-name">String</span> sql<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> params<span class="token punctuation">,</span><span class="token class-name">ResultSetListener</span> resultSetListener<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ResultSet</span> resultSet <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">PreparedStatement</span> preparedStatement <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>             preparedStatement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> params<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                preparedStatement<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> params<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            resultSet <span class="token operator">=</span> preparedStatement<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>resultSetListener <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                resultSetListener<span class="token punctuation">.</span><span class="token function">execResult</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token function">closeResource</span><span class="token punctuation">(</span>connection<span class="token punctuation">,</span> preparedStatement<span class="token punctuation">,</span> resultSet<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//关闭连接</span>        <span class="token keyword">return</span> resultSet<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">closeResource</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> connection<span class="token punctuation">,</span> <span class="token class-name">PreparedStatement</span> preparedStatement<span class="token punctuation">,</span> <span class="token class-name">ResultSet</span> resultSet<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> connection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                connection <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> preparedStatement<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                preparedStatement<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                preparedStatement <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> resultSet<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                resultSet<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                resultSet <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> flag<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ResultSetListener</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">void</span> <span class="token function">execResult</span><span class="token punctuation">(</span><span class="token class-name">ResultSet</span> resultSet<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​ 编写获取用户的接口UserDao,或者叫IUser更合适</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">smbms<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>user</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">smbms<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserDao</span> <span class="token punctuation">&#123;</span>     <span class="token class-name">User</span> <span class="token function">getLoginUser</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> connection<span class="token punctuation">,</span> <span class="token class-name">String</span> userCode<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编写实现类接口UserDaoImpl,正常获取数据库这种IO操作肯定是在子线程中,这里为了方面,就直接写了</p><pre class="line-numbers language-none"><code class="language-none">package smbms.example.org.dao.user;import smbms.example.org.dao.BaseDao;import smbms.example.org.pojo.User;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;public class UserDaoImpl implements UserDao &#123;    @Override    public User getLoginUser(Connection connection, String userCode) throws Exception &#123;        final User[] user &#x3D; &#123;null&#125;;        if (null !&#x3D; connection) &#123;            String sqlString &#x3D; &quot;select * from smbms_user where userCode&#x3D;?&quot;;            Object[] params &#x3D; &#123;userCode&#125;;            BaseDao.execute(connection, sqlString, params, rs -&gt; &#123;                if (null !&#x3D; rs) &#123;                    try &#123;                        if (rs.next()) &#123;                            user[0] &#x3D; new User();                            user[0].setId(rs.getInt(&quot;id&quot;));                            user[0].setUserCode(rs.getString(&quot;userCode&quot;));                            user[0].setUserName(rs.getString(&quot;userName&quot;));                            user[0].setUserPassword(rs.getString(&quot;userPassword&quot;));                            user[0].setGender(rs.getInt(&quot;gender&quot;));                            user[0].setBirthday(rs.getDate(&quot;birthday&quot;));                            user[0].setPhone(rs.getString(&quot;phone&quot;));                            user[0].setAddress(rs.getString(&quot;address&quot;));                            user[0].setUserRole(rs.getInt(&quot;userRole&quot;));                            user[0].setCreatedBy(rs.getInt(&quot;createdBy&quot;));                            user[0].setCreationDate(rs.getTimestamp(&quot;creationDate&quot;));                            user[0].setModifyBy(rs.getInt(&quot;modifyBy&quot;));                            user[0].setModifyDate(rs.getTimestamp(&quot;modifyDate&quot;));                        &#125;                    &#125; catch (SQLException e) &#123;                        e.printStackTrace();                    &#125;                &#125;            &#125;);        &#125;        return user[0];    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编写服务类的接口UserService以及实现类UserServiceImpl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">smbms<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token punctuation">.</span>service<span class="token punctuation">.</span>user</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">smbms<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//用户登录</span>    <span class="token class-name">User</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">String</span> userCode<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">package smbms.example.org.service.user;import smbms.example.org.dao.BaseDao;import smbms.example.org.dao.user.UserDao;import smbms.example.org.dao.user.UserDaoImpl;import smbms.example.org.pojo.User;public class UserServiceImpl implements UserService&#123;    @Override    public User login(String userCode, String password) &#123;        User loginUser &#x3D; null;        try &#123;            UserDao userDao &#x3D; new UserDaoImpl();            loginUser &#x3D; userDao.getLoginUser(BaseDao.getConnection(), userCode);            if (!loginUser.getUserPassword().equals(password)) &#123;                loginUser &#x3D; null;            &#125;        &#125; catch (Exception e) &#123;            e.printStackTrace();        &#125;        return loginUser;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在LoginServlet调用</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">smbms<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>user</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">smbms<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">smbms<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token punctuation">.</span>service<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">UserService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">smbms<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token punctuation">.</span>service<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">UserServiceImpl</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">smbms<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">Constants</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServlet</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span><span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token function">doPost</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> userCode <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"userCode"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> userPassword <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"userPassword"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">UserService</span> userService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">User</span> loginUser <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>userCode<span class="token punctuation">,</span> userPassword<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> loginUser<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            req<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">,</span> <span class="token string">"用户名或密码不争取"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            req<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"login.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            req<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>USER_SESSION<span class="token punctuation">,</span> loginUser<span class="token punctuation">)</span><span class="token punctuation">;</span>            resp<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span><span class="token string">"jsp/frame.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​ 最后设置一下过滤器</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">smbms<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token punctuation">.</span>filter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CharacterEncodingFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">FilterConfig</span> filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>        request<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">smbms<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token punctuation">.</span>filter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>deploy<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">HttpRequest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">smbms<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">smbms<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">Constants</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SysFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">FilterConfig</span> filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HttpServletRequest</span> httpRequest <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span> request<span class="token punctuation">;</span>        <span class="token class-name">HttpServletResponse</span> httpServletResponse <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">)</span> response<span class="token punctuation">;</span>        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span> httpRequest<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span>USER_SESSION<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            httpServletResponse<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span><span class="token string">"/smbms/error.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样一个简单的登录框架就完成了.后续的就是在在框架里面不断的添加类似的逻辑</p><p><strong>github地址:<a href="https://github.com/adonis-lsh/smbms">https://github.com/adonis-lsh/smbms</a></strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-环境搭建-mac-os为例&quot;&gt;&lt;a href=&quot;#1-环境搭建-mac-os为例&quot; class=&quot;headerlink&quot; title=&quot;1 环境搭建(mac os为例)&quot;&gt;&lt;/a&gt;1 环境搭建(mac os为例)&lt;/h2&gt;&lt;h3 id=&quot;1-1-tomcat环</summary>
      
    
    
    
    <category term="java_web" scheme="https://www.lishenghui.top/categories/java-web/"/>
    
    
  </entry>
  
  <entry>
    <title>ReactNative(日常遇到的问题)</title>
    <link href="https://www.lishenghui.top/2020/04/26/reactnative-02/"/>
    <id>https://www.lishenghui.top/2020/04/26/reactnative-02/</id>
    <published>2020-04-26T11:54:24.000Z</published>
    <updated>2021-06-09T08:10:03.335Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-react-native命令不生效"><a href="#1-react-native命令不生效" class="headerlink" title="1.react-native命令不生效"></a>1.react-native命令不生效</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># For others who are still having an issue and the above solutions haven't work, take a look at this.</span><span class="token comment"># I found that Gulp was not working as well and it led me to this fix.</span><span class="token comment"># Run.</span>$ <span class="token function">npm</span> config <span class="token builtin class-name">set</span> prefix /usr/localAnd <span class="token keyword">then</span> reinstall react.$ <span class="token function">npm</span> <span class="token function">install</span> -g create-react-appThe <span class="token builtin class-name">command</span> should work now.$ create-react-app my-appHappy coding.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-react-native命令不生效&quot;&gt;&lt;a href=&quot;#1-react-native命令不生效&quot; class=&quot;headerlink&quot; title=&quot;1.react-native命令不生效&quot;&gt;&lt;/a&gt;1.react-native命令不生效&lt;/h1&gt;&lt;pre </summary>
      
    
    
    
    <category term="ReactNative" scheme="https://www.lishenghui.top/categories/ReactNative/"/>
    
    
  </entry>
  
  <entry>
    <title>MacOS查看Android 8.1源码</title>
    <link href="https://www.lishenghui.top/2019/09/24/aosp02/"/>
    <id>https://www.lishenghui.top/2019/09/24/aosp02/</id>
    <published>2019-09-24T15:09:30.000Z</published>
    <updated>2021-06-09T11:50:41.455Z</updated>
    
    <content type="html"><![CDATA[<h2 id="工具的选择"><a href="#工具的选择" class="headerlink" title="工具的选择"></a>工具的选择</h2><p>1.Android Studio(可以看,可以调试) 2.understand (只适合看)</p><p>macbook pro基本上只有这两款可以选择,刚开始用了understand发现并不怎么好使,也许是没有使用习惯,我们在看源码的时候,有一些过程肯定也是需要调试才知道某些方法执行的先后顺序,所以我最终选择了AS,原来的时候也用AS 2.3看过源码,那时候下面一直再scan index,导致没法正常调式.最新的AS 3.5没有这个问题.</p><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>进到android源码的目录下执行:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> idegen <span class="token operator">&amp;&amp;</span> development/tools/idegen/idegen.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后一般会报错:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">could not <span class="token function">find</span> jdk tools.jar at /System/Library/Frameworks/JavaVM.framework/Versions/Current/Commands/<span class="token punctuation">..</span>/lib/tools.jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>解决方法, vi ~/.bash_profile,在bash_profile里面添加如下代码:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>/usr/libexec/java_home<span class="token variable">)</span></span><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/bin:<span class="token environment constant">$PATH</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">CLASS_PATH</span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/lib<span class="token builtin class-name">export</span> <span class="token assign-left variable">ANDROID_JAVA_HOME</span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果你的JAVA_HOME已经配置,设置最后一行即可.编译完成之后,会生成 <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/19-9-24/15693345513082.jpg" alt="-w641"></p><p>如上图所示的三个文件.</p><h2 id="导入到Android-Studio"><a href="#导入到Android-Studio" class="headerlink" title="导入到Android Studio"></a>导入到Android Studio</h2><ul><li>  点击菜单的open–&gt;选择源码目录,接下来需要等一会儿生成index</li><li>  点击Configure project structure ,配置如下: <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/19-9-24/15693348827338.jpg" alt="-w809"></li></ul><p>可以把不常用不看的代码在这里可以先排除出去,红色的都是没有生成索引的 <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/19-9-24/15693351208886.jpg" alt="-w1158"></p><p>接下来就是设置Android源码之间相互依赖关联,而不是依赖其他第三方的jar包.这里面需要注意的是,先ctrl+A,选中所以,反选最后两个,delete删除其他的即可.不要一个一个去删. <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/19-9-24/15693352135369.jpg" alt="-w1208"></p><p>最后: <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/19-9-24/15693353461772.jpg" alt="-w1092"></p><p>到这里面基本上就设置完成了.</p><h2 id="开启模拟器"><a href="#开启模拟器" class="headerlink" title="开启模拟器"></a>开启模拟器</h2><ol><li> <code>source build/envsetup.sh</code></li><li> <code>lunch</code> <a href="https://source.android.google.cn/source/running.html#selecting-device-build">选择编译的版本,可点击</a></li><li> <code>emulator</code></li></ol><p>我们第一篇文章谢了,我这里面编译的是aosp_x86_64-eng,好了,模拟器就正常加载了,但是进入到模拟器里面的时候,每次点击设置都会FC,报一个wifi2p的一个错误,这个可以在AS的logcat里面看到,最后google到答案,说是wifi的锅.然后修改源码:</p><p>修改com.android.settings.wfd.WifiDisplaySettings中的isAvailable方法,返回false.</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isAvailable</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//加上这个会在模拟器上面报错</span><span class="token comment">//        return context.getSystemService(Context.DISPLAY_SERVICE) != null</span><span class="token comment">//                &amp;&amp; context.getSystemService(Context.WIFI_P2P_SERVICE) != null;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样改过之后再重新make,启动模拟器,你会发现进到设置里面不会FC了</p><h2 id="开始调试"><a href="#开始调试" class="headerlink" title="开始调试"></a>开始调试</h2><ol><li> 点击Attach debugger to Android Process,你会看到如下: <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/19-9-24/15693361066891.jpg" alt="-w539"></li></ol><p>然后就可以选择一个进程进行调试了,但是如果你想调试系统的一些进程,这还是不够的,因为我们在编译的时候,编译的是aosp_x86_64-eng,不是带-userdebug参数的,所以没办法调试,带-userdebug参数的都是给真机使用的,我也是在选择了一个编译完成以后才发现模拟器竟然不能用…..,当然你也可以自定义编译配置,有兴趣可以网上搜一下,我这里改了一下代码:</p><p>在ZygoteProcess类的startViaZygote方法中,</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">        argsForZygote.add(&quot;--enable-jni-logging&quot;);        argsForZygote.add(&quot;--enable-safemode&quot;);        argsForZygote.add(&quot;--enable-jdwp&quot;);        argsForZygote.add(&quot;--enable-checkjni&quot;);        argsForZygote.add(&quot;--generate-debug-info&quot;);        argsForZygote.add(&quot;--always-jit&quot;);        argsForZygote.add(&quot;--native-debuggable&quot;);        argsForZygote.add(&quot;--java-debuggable&quot;);        argsForZygote.add(&quot;--enable-assert&quot;);        argsForZygote.add(&quot;--mount-external-default&quot;);        argsForZygote.add(&quot;--mount-external-write&quot;);&#x2F;&#x2F;        if ((debugFlags &amp; Zygote.DEBUG_ENABLE_JNI_LOGGING) !&#x3D; 0) &#123;&#x2F;&#x2F;            argsForZygote.add(&quot;--enable-jni-logging&quot;);&#x2F;&#x2F;        &#125;&#x2F;&#x2F;        if ((debugFlags &amp; Zygote.DEBUG_ENABLE_SAFEMODE) !&#x3D; 0) &#123;&#x2F;&#x2F;            argsForZygote.add(&quot;--enable-safemode&quot;);&#x2F;&#x2F;        &#125;&#x2F;&#x2F;        if ((debugFlags &amp; Zygote.DEBUG_ENABLE_JDWP) !&#x3D; 0) &#123;&#x2F;&#x2F;            argsForZygote.add(&quot;--enable-jdwp&quot;);&#x2F;&#x2F;        &#125;&#x2F;&#x2F;        if ((debugFlags &amp; Zygote.DEBUG_ENABLE_CHECKJNI) !&#x3D; 0) &#123;&#x2F;&#x2F;            argsForZygote.add(&quot;--enable-checkjni&quot;);&#x2F;&#x2F;        &#125;&#x2F;&#x2F;        if ((debugFlags &amp; Zygote.DEBUG_GENERATE_DEBUG_INFO) !&#x3D; 0) &#123;&#x2F;&#x2F;            argsForZygote.add(&quot;--generate-debug-info&quot;);&#x2F;&#x2F;        &#125;&#x2F;&#x2F;        if ((debugFlags &amp; Zygote.DEBUG_ALWAYS_JIT) !&#x3D; 0) &#123;&#x2F;&#x2F;            argsForZygote.add(&quot;--always-jit&quot;);&#x2F;&#x2F;        &#125;&#x2F;&#x2F;        if ((debugFlags &amp; Zygote.DEBUG_NATIVE_DEBUGGABLE) !&#x3D; 0) &#123;&#x2F;&#x2F;            argsForZygote.add(&quot;--native-debuggable&quot;);&#x2F;&#x2F;        &#125;&#x2F;&#x2F;        if ((debugFlags &amp; Zygote.DEBUG_JAVA_DEBUGGABLE) !&#x3D; 0) &#123;&#x2F;&#x2F;            argsForZygote.add(&quot;--java-debuggable&quot;);&#x2F;&#x2F;        &#125;&#x2F;&#x2F;        if ((debugFlags &amp; Zygote.DEBUG_ENABLE_ASSERT) !&#x3D; 0) &#123;&#x2F;&#x2F;            argsForZygote.add(&quot;--enable-assert&quot;);&#x2F;&#x2F;        &#125;&#x2F;&#x2F;        if (mountExternal &#x3D;&#x3D; Zygote.MOUNT_EXTERNAL_DEFAULT) &#123;&#x2F;&#x2F;            argsForZygote.add(&quot;--mount-external-default&quot;);&#x2F;&#x2F;        &#125; else if (mountExternal &#x3D;&#x3D; Zygote.MOUNT_EXTERNAL_READ) &#123;&#x2F;&#x2F;            argsForZygote.add(&quot;--mount-external-read&quot;);&#x2F;&#x2F;        &#125; else if (mountExternal &#x3D;&#x3D; Zygote.MOUNT_EXTERNAL_WRITE) &#123;&#x2F;&#x2F;            argsForZygote.add(&quot;--mount-external-write&quot;);&#x2F;&#x2F;        &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我把所有debug参数都给添加了上去.重新编译运行.最后就可以愉快的玩耍了.但是有一个问题就是,调试运行都没问题了,但是我想调试一个app的启动,发现这个好像有点困难,因为在进程启动以后才能attach,但是其他的生命周期的调试没有任何问题.</p><p>接下来我会完整的分析App的启动流程和Activity的启动流程.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;工具的选择&quot;&gt;&lt;a href=&quot;#工具的选择&quot; class=&quot;headerlink&quot; title=&quot;工具的选择&quot;&gt;&lt;/a&gt;工具的选择&lt;/h2&gt;&lt;p&gt;1.Android Studio(可以看,可以调试) 2.understand (只适合看)&lt;/p&gt;
&lt;p&gt;macb</summary>
      
    
    
    
    <category term="Android源码" scheme="https://www.lishenghui.top/categories/Android%E6%BA%90%E7%A0%81/"/>
    
    
  </entry>
  
  <entry>
    <title>MacOS编译Android 8.1源码</title>
    <link href="https://www.lishenghui.top/2019/09/16/aosp01/"/>
    <id>https://www.lishenghui.top/2019/09/16/aosp01/</id>
    <published>2019-09-16T11:15:39.000Z</published>
    <updated>2021-06-09T11:50:31.729Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ol><li> macbook pro 18款,16G内存,500G硬盘</li><li> 系统版本:10.14.6</li><li> java 8,xcode是最新的10.3</li></ol><h2 id="原料"><a href="#原料" class="headerlink" title="原料"></a>原料</h2><p>1.Android源码一份 <a href="https://pan.baidu.com/s/113Bp4qial-wzRhJmwIOfRQ">https://pan.baidu.com/s/113Bp4qial-wzRhJmwIOfRQ</a> 2.macPorts 一份 <a href="https://www.macports.org/install.php">https://www.macports.org/install.php</a> 3.macOS 10.12 SDK一份 <a href="https://github.com/phracker/MacOSX-SDKs/releases">https://github.com/phracker/MacOSX-SDKs/releases</a> 4.HAXM 一份 <a href="https://github.com/intel/haxm/releases">https://github.com/intel/haxm/releases</a></p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>开始之前请先确认自己的java环境已经Android环境已经配置好,你要是Android开发,一般没什么问题</p><h3 id="1-下载源码"><a href="#1-下载源码" class="headerlink" title="1. 下载源码"></a>1. 下载源码</h3><p>下载Android8.1的Android源码,得到android-8.1.0_r1压缩包,自己也可以去下载,不过这个时间会非常的长,根据个人口味选择</p><h3 id="2-创建磁盘映像"><a href="#2-创建磁盘映像" class="headerlink" title="2. 创建磁盘映像"></a>2. 创建磁盘映像</h3><p>创建一个不少于150G的磁盘映像,我编译下载实际占用120G多一点</p><p><strong>通过命令创建</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hdiutil create -type SPARSE -fs <span class="token string">'Case-sensitive Journaled HFS+'</span> -size 190g ~/自己想要配置的路径/android.dmg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>通过磁盘工具创建</strong></p><p><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/19-9-16/15686221154315.jpg" alt="-w1061"> <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/19-9-16/15686222064457.jpg" alt="-w412"></p><p><strong>note:</strong></p><ol><li> 这个稀松硬盘镜像是可以和你的mac共享磁盘空间的,你磁盘空间实际使用多少就占用多少</li><li> 名称主要注意,<strong>一定要用英文,不能使用默认中文的未命名</strong>,不然编译的时候会报一个某个文件找不到的错</li><li> <strong>一定要用英文,不能使用默认中文的未命名</strong></li><li> <strong>一定要用英文,不能使用默认中文的未命名</strong></li></ol><h3 id="3-安装macPorts软件"><a href="#3-安装macPorts软件" class="headerlink" title="3.安装macPorts软件"></a>3.安装macPorts软件</h3><p>如果不出意外的话,你在安装macPorts肯定会卡住,因为这个软件同步源的默认网址那是相当的慢,有人说开全局VPN,实际上还是不行,那怎么办?先强制退出安装器,点击mac的重启按钮是,它会自动弹出来一个安装进程的一个弹窗,在强制退出,当然你通过命令找到它关掉也可以.然后然后是更换源,手动更新,一般安装的时候环境变量就自动配置好了.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token builtin class-name">cd</span> /opt/local/etc/macports/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>找到下面的sources.conf文件夹,通过vi编辑器来修改这一行代码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rsync://rsync.macports.org/macports/release/tarballs/ports.tar <span class="token punctuation">[</span>default<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>改为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://distfiles.macports.org/ports.tar.gz <span class="token punctuation">[</span>default<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>改为11111</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">HandleControlMessages</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">auto</span> lock <span class="token operator">=</span> std<span class="token operator">::</span>unique_lock<span class="token punctuation">&#123;</span>pending_control_messages_lock<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// Init historically would only execute handle one property message, including control messages</span>    <span class="token comment">// in each iteration of its main loop.  We retain this behavior here to prevent starvation of</span>    <span class="token comment">// other actions in the main loop.</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pending_control_messages<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">auto</span> control_message <span class="token operator">=</span> pending_control_messages<span class="token punctuation">.</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        pending_control_messages<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">bool</span> success <span class="token operator">=</span> <span class="token function">HandleControlMessage</span><span class="token punctuation">(</span>control_message<span class="token punctuation">.</span>message<span class="token punctuation">,</span> control_message<span class="token punctuation">.</span>name<span class="token punctuation">,</span>                                            control_message<span class="token punctuation">.</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">uint32_t</span> response <span class="token operator">=</span> success <span class="token operator">?</span> PROP_SUCCESS <span class="token operator">:</span> PROP_ERROR_HANDLE_CONTROL_MESSAGE<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>control_message<span class="token punctuation">.</span>fd <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">TEMP_FAILURE_RETRY</span><span class="token punctuation">(</span><span class="token function">send</span><span class="token punctuation">(</span>control_message<span class="token punctuation">.</span>fd<span class="token punctuation">,</span> <span class="token operator">&amp;</span>response<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">close</span><span class="token punctuation">(</span>control_message<span class="token punctuation">.</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// If we still have items to process, make sure we wake back up to do so.</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pending_control_messages<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">WakeMainInitThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再来手动进行更新源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> port -d <span class="token function">sync</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装Make、Git 和 GPG 软件包</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">POSIXLY_CORRECT</span><span class="token operator">=</span><span class="token number">1</span> <span class="token function">sudo</span> port <span class="token function">install</span> gmake libsdl <span class="token function">git</span> gnupg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-下载Mac-SDK-10-12"><a href="#4-下载Mac-SDK-10-12" class="headerlink" title="4.下载Mac SDK 10.12"></a>4.下载Mac SDK 10.12</h3><p>正常情况下你现在编译肯定会报错:Could not find a supported mac sdk: [“10.10” “10.11” “10.12” “10.13”]</p><p>所以我们直接下一个10.12 SDK放进去,网上有人说修改文件什么的,在我电脑上面我也没有找到那个文件,还是添加SDK方法的好使,一劳永逸</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;Applications&#x2F;Xcode.app&#x2F;Contents&#x2F;Developer&#x2F;Platforms&#x2F;MacOSX.platform&#x2F;Developer&#x2F;SDKs&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>把下载的sdk包解压到上面的路径即可</p><h3 id="5-解除文件数量限制"><a href="#5-解除文件数量限制" class="headerlink" title="5.解除文件数量限制"></a>5.解除文件数量限制</h3><p>解除mac同时打开文件数量的限制: <code>$ sudo vi ~/.bash_profile</code></p><p>添加</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># set the number of open files to be 1024</span><span class="token builtin class-name">ulimit</span> -S -n <span class="token number">1024</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>也可以再大一点</p><h3 id="6-设置bison"><a href="#6-设置bison" class="headerlink" title="6.设置bison"></a>6.设置bison</h3><p>这个一般都会有问题,所以编译之前先测试一下,cd到你解压Android源码的地方,执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">prebuilts/misc/darwin-x86/bison/bison --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果显示是Abort trap: 6,则是有问题,如果不处理的话,编译的过程中则会报</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ninja: build stopped: subcommand failed.ninja failed with: <span class="token builtin class-name">exit</span> status <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>解决方案:</p><p>有人说安装bison通过软连接来进行处理,实测不行,</p><p>1.创建patch-high-sierra.patch</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> external/bison<span class="token function">touch</span> patch-high-sierra.patch<span class="token function">sudo</span> <span class="token function">vi</span> patch-high-sierra.patch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>插入以下内容</p><pre class="line-numbers language-none"><code class="language-none">With format string strictness, High Sierra also enforces that %n isn&#39;t usedin dynamic format strings, but we should just disable its use on darwin ingeneral.--- lib&#x2F;vasnprintf.c.orig   2017-06-22 15:19:15.000000000 -0700+++ lib&#x2F;vasnprintf.c    2017-06-22 15:20:20.000000000 -0700@@ -4869,7 +4869,7 @@ VASNPRINTF (DCHAR_T *resultbuf, size_t * #endif                   *fbp &#x3D; dp-&gt;conversion; #if USE_SNPRINTF-# if !(((__GLIBC__ &gt; 2  (__GLIBC__ &#x3D;&#x3D; 2 &amp;&amp; __GLIBC_MINOR__ &gt;&#x3D; 3)) &amp;&amp; !defined __UCLIBC__)  ((defined _WIN32  defined __WIN32__) &amp;&amp; ! defined __CYGWIN__))+# if !defined(__APPLE__) &amp;&amp; !(((__GLIBC__ &gt; 2  (__GLIBC__ &#x3D;&#x3D; 2 &amp;&amp; __GLIBC_MINOR__ &gt;&#x3D; 3)) &amp;&amp; !defined __UCLIBC__)  ((defined _WIN32  defined __WIN32__) &amp;&amp; ! defined __CYGWIN__))                 fbp[1] &#x3D; &#39;%&#39;;                 fbp[2] &#x3D; &#39;n&#39;;                 fbp[3] &#x3D; &#39;\0&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.编译</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">patch -p0 <span class="token operator">&lt;</span> patch-high-sierra.patch  mm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果没有mm命令,在源码根目录执行,然后回来在执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> build/envsetup.shlunch <span class="token number">24</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3.拷贝</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> ./out/host/darwin-x86/obj/EXECUTABLES/bison_intermediates/bison ./prebuilts/misc/darwin-x86/bison/bison <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.验证</p><p>最后通过命令验证是否设置成功</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">prebuilts/misc/darwin-x86/bison/bison --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>正常会提示一个版本号,我的提示是2.7</p><h3 id="7-设置JVM的最大堆栈"><a href="#7-设置JVM的最大堆栈" class="headerlink" title="7.设置JVM的最大堆栈"></a>7.设置JVM的最大堆栈</h3><p>为了防止OOM,直接提前设置一下. <code>sudo vi ./prebuilts/sdk/tools/jack-admin</code> 编辑文件,找到</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">JACK_SERVER_VM_ARGUMENTS</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$&#123;JACK_SERVER_VM_ARGUMENTS<span class="token operator">:=</span>-Dfile.encoding=UTF-8&#125;</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在后面添加-Xmx8192M,这个根据自己电脑的内存大小自己设置.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">JACK_SERVER_VM_ARGUMENTS</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$&#123;JACK_SERVER_VM_ARGUMENTS<span class="token operator">:=</span>-Dfile.encoding=UTF-8 -Xmx8192M&#125;</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="8-下载驱动"><a href="#8-下载驱动" class="headerlink" title="8.下载驱动"></a>8.下载驱动</h3><p>驱动不要下载错,选择android-8.1.0_r1和对应的版本</p><p><a href="https://developers.google.com/android/drivers">https://developers.google.com/android/drivers</a></p><p>最后解压到源码根目录,执行.sh文件,会在源码中创建vendor文件夹</p><h3 id="9-编译"><a href="#9-编译" class="headerlink" title="9.编译"></a>9.编译</h3><p>1.清除一下原来的缓存 <code>make clobber</code></p><p>2.设置环境 <code>source build/envsetup.sh</code></p><p>3.选择版本,我选择的是6 <code>lunch</code></p><p>4.编译 根据自己的实际情况选择合适的线程数 <code>make -j8</code></p><p>5.等待奇迹出现</p><h3 id="10-模拟器"><a href="#10-模拟器" class="headerlink" title="10.模拟器"></a>10.模拟器</h3><p>1.编译好以后,运行emulator,不出意外,你会得到:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Failed to <span class="token function">open</span> the hax moduleWarning: requested RAM 2048M too high <span class="token keyword">for</span> your system. Reducing to maximum supported size 0MHax is enabledHax ram_size 0x0Failed to <span class="token function">open</span> the hax moduleNo accelerator found.failed to initialize HAX: Operation not supported by device<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>明明自己AS里面的模拟器加速没问题,为什么还是提示不能加速呢,解决方案,自己下一个安装一下就好,地址在上面.最后你就可以把自己编译的Android源码跑在模拟器上面了.</p><p><strong>参考链接</strong></p><ol><li> <a href="https://www.cnblogs.com/ryanchi/archive/2016/07/18/5682186.html">https://www.cnblogs.com/ryanchi/archive/2016/07/18/5682186.html</a></li><li> <a href="https://blog.csdn.net/qq/_36006553/article/details/82860806">https://blog.csdn.net/qq\_36006553/article/details/82860806</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;工具&quot;&gt;&lt;a href=&quot;#工具&quot; class=&quot;headerlink&quot; title=&quot;工具&quot;&gt;&lt;/a&gt;工具&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt; macbook pro 18款,16G内存,500G硬盘&lt;/li&gt;
&lt;li&gt; 系统版本:10.14.</summary>
      
    
    
    
    <category term="Android源码" scheme="https://www.lishenghui.top/categories/Android%E6%BA%90%E7%A0%81/"/>
    
    
  </entry>
  
  <entry>
    <title>小白switch破解流程初探</title>
    <link href="https://www.lishenghui.top/2019/03/19/xiao-baiswitch-po-jie-liu-cheng-chu-tan/"/>
    <id>https://www.lishenghui.top/2019/03/19/xiao-baiswitch-po-jie-liu-cheng-chu-tan/</id>
    <published>2019-03-19T06:22:38.000Z</published>
    <updated>2021-06-07T07:32:14.509Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>明天是楼主的生日,为了犒劳一下自己,入手一台可以破解的switch,到目前为止还没有破解,在研究到底哪一种破解方式更适合我,以及破解的流程.</p><h2 id="switch到底是什么漏洞导致的破解"><a href="#switch到底是什么漏洞导致的破解" class="headerlink" title="switch到底是什么漏洞导致的破解?"></a>switch到底是什么漏洞导致的破解?</h2><p><a href="https://fail0verflow.com/blog/2018/shofel2/">https://fail0verflow.com/blog/2018/shofel2/</a></p><p>我看到这篇文章,看完之后对它有了一点认识,博文中有一段文字是这么说的:</p><hr><p>Nintendo Switch内部的Tegra X1（也称为Tegra210）SoC包含一个可利用的漏洞，可以控制早期执行，绕过所有签名检查。此错误处于RCM模式，这是一种基于USB的救援模式，用于初始闪存Tegra设备和恢复砖块设备。通常，RCM模式只允许加载签名图像，但由于该错误，可以执行任意代码。</p><p>这意味着为了在Switch上获得代码执行，您需要完成两个完全独立的事情：</p><ul><li>  进入RCM模式</li><li>  执行基于USB的漏洞利用</li></ul><p>每个都可以通过几种独立的方式完成。请注意，这是iPhone用户称之为“不完全越狱”的原因，因为它需要在每次启动时通过USB执行。</p><p>由于这个bug存在于Boot ROM中，因此如果没有硬件修订就无法修补，这意味着现在所有的Switch单元都是永久性的。任天堂只能在制造过程中修补Boot ROM错误。由于漏洞在引导过程的早期发生，因此它允许提取所有设备数据和机密，包括Boot ROM本身和所有加密密钥。它也可以用于取消任何Tegra设备，只要它没有遭受硬件损坏或发生不可逆转的变化（例如熔断器熔断）。由于这是一个不需要触摸板载eMMC存储的启动时错误，因此现有软件无法检测到它的使用。只要您不尝试更改板载内存（例如，您可以存储Linux文件系统），您就可以永久地双启动Linux（通过USB漏洞利用）和Switch OS（通过正常启动）而不受惩罚在第二个SD卡分区或另一个SD卡上）。</p><hr><p><strong>RCM的全称:ReCovery Mode</strong></p><p>一般是用来工程人员救砖使用,类似于Android手机的ReCovery模式,刷过机的同学们应该对它有影响.</p><h2 id="注入器注入的文件到底是什么-注入器的作用是什么"><a href="#注入器注入的文件到底是什么-注入器的作用是什么" class="headerlink" title="注入器注入的文件到底是什么?注入器的作用是什么?"></a>注入器注入的文件到底是什么?注入器的作用是什么?</h2><p><strong>先说机器短接之后,按音量+和电源键进入了RCM模式,为什么是黑的?</strong></p><p>因为没有引导加载的程序,不管你是用带有TOG的手机,还是用电脑,还是使用注入器,都是为了向机器的boot rom中传输引导加载的程序(例如hekate_ctcaer_4.9.1.bin,可以引导SX OS的payload.bin),这个可以是不同的,作者可以自定义,当然你自己也可以写.类似于Android里面的ReCovery,一般想要刷第三方的rom,一般都需要替换ReCovery,windows系统也有引导程序,搞过黑苹果的同学应该熟悉四叶草,变色龙引导不同的操作系统.道理都是一样的.</p><p><strong>为什么每次启动都需要注入引导程序</strong></p><p>因为你是通过USB动态注入的程序,每次引导之后当然会丢失,除非你有专门存引导程序的地方,我貌似记得有人硬改机器可以不用每次冲去都注入这段程序.(如有补充或不对的地方请留言补充)</p><h2 id="为什么大气层破解容易被ban机-而SX-OS几率就很小"><a href="#为什么大气层破解容易被ban机-而SX-OS几率就很小" class="headerlink" title="为什么大气层破解容易被ban机?而SX OS几率就很小?"></a>为什么大气层破解容易被ban机?而SX OS几率就很小?</h2><p>我想这个实现方式有关系,SX OS是引导内存卡上面的Custom firmware系统,也就是自制系统,和原系统并没有什么关系,所以检测倒的概率有点小,而其他破解方式是直接破解本机上面的系统,所以联网之后多多少少会有痕迹.如果有理解不对的地方请指出.</p><h2 id="注入器的选择"><a href="#注入器的选择" class="headerlink" title="注入器的选择"></a>注入器的选择</h2><p>看了这么多帖子,感觉还是手机加上一根C2C的线更好吧,前提是手机支持,带上小米的45w充电器,嗯,想想就很美好.毕竟手机和充电器是必须要带的,所以很有必要买一个短接器,锡纸那个太有难度了,没有开关机都要用,貌似很不爽.</p><hr><p>上买都是我自己看github看帖子总结的一些东西,肯定有不对的地方.希望和大神们交流一下</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;明天是楼主的生日,为了犒劳一下自己,入手一台可以破解的switch,到目前为止还没有破解,在研究到底哪一种破解方式更适合我,以及破解的流程.</summary>
      
    
    
    
    <category term="业余爱好" scheme="https://www.lishenghui.top/categories/%E4%B8%9A%E4%BD%99%E7%88%B1%E5%A5%BD/"/>
    
    
    <category term="爱好" scheme="https://www.lishenghui.top/tags/%E7%88%B1%E5%A5%BD/"/>
    
  </entry>
  
  <entry>
    <title>每天一道算法题</title>
    <link href="https://www.lishenghui.top/2019/02/16/suanfa/"/>
    <id>https://www.lishenghui.top/2019/02/16/suanfa/</id>
    <published>2019-02-16T01:53:39.000Z</published>
    <updated>2021-06-09T07:43:45.638Z</updated>
    
    <content type="html"><![CDATA[<p>时间复杂度的计算方法,请参考:<a href="https://blog.csdn.net/zolalad/article/details/11848739">https://blog.csdn.net/zolalad/article/details/11848739</a></p><h2 id="两数之和"><a href="#两数之和" class="headerlink" title="两数之和"></a>两数之和</h2><p><a href="https://leetcode-cn.com/problems/two-sum/">https://leetcode-cn.com/problems/two-sum/</a></p><p>自己的答案</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> twoSumIndex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                twoSumIndex<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>                twoSumIndex<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> j<span class="token punctuation">;</span>                <span class="token keyword">return</span> twoSumIndex<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    twoSumIndex<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span>    twoSumIndex<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> twoSumIndex<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="两数想加"><a href="#两数想加" class="headerlink" title="两数想加"></a>两数想加</h2><p>对题目没有理解透彻,最终放弃</p><p><a href="https://leetcode-cn.com/problems/add-two-numbers/solution/">https://leetcode-cn.com/problems/add-two-numbers/solution/</a></p><p>官方答案:</p><p>整体来说这个思想还是比较重要的,就说这个链表头的问题,一开始就就没有想到这个.真的挺有意思,</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">addTwoNumbers</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> l1<span class="token punctuation">,</span> <span class="token class-name">ListNode</span> l2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ListNode</span> dummyHead <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">ListNode</span> p <span class="token operator">=</span> l1<span class="token punctuation">,</span> q <span class="token operator">=</span> l2<span class="token punctuation">,</span> curr <span class="token operator">=</span> dummyHead<span class="token punctuation">;</span>    <span class="token keyword">int</span> carry <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> <span class="token keyword">null</span>  q <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> p<span class="token punctuation">.</span>val <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token punctuation">(</span>q <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> q<span class="token punctuation">.</span>val <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> sum <span class="token operator">=</span> carry <span class="token operator">+</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>        carry <span class="token operator">=</span> sum <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>        curr<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>sum <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        curr <span class="token operator">=</span> curr<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> p <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>q <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> q <span class="token operator">=</span> q<span class="token punctuation">.</span>next<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>carry <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        curr<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>carry<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> dummyHead<span class="token punctuation">.</span>next<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="无重复字符的最长子串"><a href="#无重复字符的最长子串" class="headerlink" title="无重复字符的最长子串"></a>无重复字符的最长子串</h2><p><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/">https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/</a></p><p>自己的答案</p><pre class="line-numbers language-vim" data-language="vim"><code class="language-vim">感觉自己做的对算法还是了解太少<span class="token punctuation">,</span>脑子中思考的问题的时候<span class="token punctuation">,</span>首先想到的都是最笨的方法<span class="token operator">.</span><span class="token operator">.</span><span class="token operator">.</span><span class="token operator">.</span><span class="token operator">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">lengthOfLongestSubstring</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> maxLength <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token class-name">StringBuilder</span> temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        temp<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>temp<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                temp<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>maxLength <span class="token operator">&lt;</span> temp<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        maxLength <span class="token operator">=</span> temp<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">return</span> maxLength<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>maxLength <span class="token operator">&lt;</span> temp<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    maxLength <span class="token operator">=</span> temp<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                temp<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> temp<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>maxLength <span class="token operator">&lt;</span> temp<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        maxLength <span class="token operator">=</span> temp<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> maxLength<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="寻找两个有序数组的中位数"><a href="#寻找两个有序数组的中位数" class="headerlink" title="寻找两个有序数组的中位数"></a>寻找两个有序数组的中位数</h2><p>这一题没有做出来,官方解题答案</p><p>好吧,暂时这题还没有研究透彻,有时间继续看</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">findMedianSortedArrays</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">A</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">B</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token class-name">A</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token class-name">B</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">></span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// to ensure m&lt;=n</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp <span class="token operator">=</span> <span class="token class-name">A</span><span class="token punctuation">;</span> <span class="token class-name">A</span> <span class="token operator">=</span> <span class="token class-name">B</span><span class="token punctuation">;</span> <span class="token class-name">B</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>            <span class="token keyword">int</span> tmp <span class="token operator">=</span> m<span class="token punctuation">;</span> m <span class="token operator">=</span> n<span class="token punctuation">;</span> n <span class="token operator">=</span> tmp<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">int</span> iMin <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> iMax <span class="token operator">=</span> m<span class="token punctuation">,</span> halfLen <span class="token operator">=</span> <span class="token punctuation">(</span>m <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>iMin <span class="token operator">&lt;=</span> iMax<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span>iMin <span class="token operator">+</span> iMax<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> j <span class="token operator">=</span> halfLen <span class="token operator">-</span> i<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> iMax <span class="token operator">&amp;&amp;</span> <span class="token class-name">B</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token class-name">A</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                iMin <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// i is too small</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">></span> iMin <span class="token operator">&amp;&amp;</span> <span class="token class-name">A</span><span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token class-name">B</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                iMax <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// i is too big</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token comment">// i is perfect</span>                <span class="token keyword">int</span> maxLeft <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> maxLeft <span class="token operator">=</span> <span class="token class-name">B</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> maxLeft <span class="token operator">=</span> <span class="token class-name">A</span><span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>                <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> maxLeft <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token class-name">A</span><span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">B</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span>m <span class="token operator">+</span> n<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> maxLeft<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>                <span class="token keyword">int</span> minRight <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> m<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> minRight <span class="token operator">=</span> <span class="token class-name">B</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> minRight <span class="token operator">=</span> <span class="token class-name">A</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>                <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> minRight <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token class-name">B</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">A</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>maxLeft <span class="token operator">+</span> minRight<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token number">0.0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;时间复杂度的计算方法,请参考:&lt;a href=&quot;https://blog.csdn.net/zolalad/article/details/11848739&quot;&gt;https://blog.csdn.net/zolalad/article/details/11848739&lt;/a</summary>
      
    
    
    
    <category term="工作总结" scheme="https://www.lishenghui.top/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="算法" scheme="https://www.lishenghui.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>体验原生8.1,google人脸解锁(非技术)</title>
    <link href="https://www.lishenghui.top/2018/08/21/androidrom/"/>
    <id>https://www.lishenghui.top/2018/08/21/androidrom/</id>
    <published>2018-08-21T11:00:24.000Z</published>
    <updated>2021-06-09T08:42:00.820Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>作为一个屌丝,非常的喜欢小米,也看好小米,但是最近小米一系列的做法,让我慢慢对它失去了信心和热情.</p><ol><li> 小米8探索版耍猴,这个不需要多说,大家都有体会</li><li> miui10的发布,发布会看了之后满腔热血,但是实际在小米5s plus上面的体验,感觉也就那样.前置摄像头还会出现条纹,并且不给升级Android8.0,当初说的什么AI预加载,我并没有看到,也没有体验到快了多少,而且打开软件比以前更慢了</li></ol><h2 id="行动"><a href="#行动" class="headerlink" title="行动"></a>行动</h2><p>MIUI 刚开始就是在CM上面做优化,虽然现在没有CM了,但是继承这LineageOS还在,并且我一直在关注这它,刚开始发布LineageOS 15.1的时候,还是有很多bug的,但是现在的这些版本基本稳定,其实随着Android版本的不断迭代,原生rom并没有比现在各种厂商定制的rom差多少,下面就开始我们的类原生之旅吧</p><p><strong>note:</strong></p><hr><h2 id="如果大家想体验原汁原的原生rom的-建议大家挂手机上下个VPN-也可以在家里的路由器上面挂一个-这还是比较爽的"><a href="#如果大家想体验原汁原的原生rom的-建议大家挂手机上下个VPN-也可以在家里的路由器上面挂一个-这还是比较爽的" class="headerlink" title="如果大家想体验原汁原的原生rom的,建议大家挂手机上下个VPN,也可以在家里的路由器上面挂一个,这还是比较爽的"></a>如果大家想体验原汁原的原生rom的,建议大家挂手机上下个VPN,也可以在家里的路由器上面挂一个,这还是比较爽的</h2><h3 id="解锁"><a href="#解锁" class="headerlink" title="解锁"></a>解锁</h3><p>这个不用说了,自己动手搞定吧,刷机前请先用小米助手3,或者其他软件备份一下,以免感觉不适刷回来.</p><h2 id="刷入最新的recovery"><a href="#刷入最新的recovery" class="headerlink" title="刷入最新的recovery"></a>刷入最新的recovery</h2><p>论坛上面的recovery太久了,用3.0.2版本会报一个-7的错误,在LineageOS官网的刷机指南上面下了一个新的,有能力的同学可以自己去下.地址奉上: 链接: <a href="https://pan.baidu.com/s/15SkJCThQuz7Z6L5DOYgtmA">https://pan.baidu.com/s/15SkJCThQuz7Z6L5DOYgtmA</a> 密码: 5h33</p><ul><li>  安装相关驱动</li><li>  手机进入fastboot模式</li><li>  解压下载文件,点击批处理文件即可输入</li></ul><p>有能力的同学也可以进到下载的文件夹下直接敲命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">fastboot flash recovery twrp-3.2.3-0-natrium<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个是刷入twrp-3.2.3-0-natrium镜像的recovery</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">fastboot boot twrp-3.2.3-0-natrium<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个是重启到recovery</p><ul><li>  在recovery中选择显示的语言为简体中文,也可以不选</li></ul><p><strong>note:</strong></p><hr><h2 id="这个window批处理是借用3-0-2那个作者的-改了一下上面那两句命令-用别人的东西要注明出处"><a href="#这个window批处理是借用3-0-2那个作者的-改了一下上面那两句命令-用别人的东西要注明出处" class="headerlink" title="这个window批处理是借用3.0.2那个作者的,改了一下上面那两句命令,用别人的东西要注明出处."></a>这个window批处理是借用3.0.2那个作者的,改了一下上面那两句命令,用别人的东西要注明出处.</h2><h2 id="安装LineageOS-ROM"><a href="#安装LineageOS-ROM" class="headerlink" title="安装LineageOS ROM"></a>安装LineageOS ROM</h2><ul><li>  MIUI官网对data分区,也就是内置SD卡就行的加密,所以我们要先格式化一下,在recovery中,点击 清除—-&gt;格式化Data分区—-&gt;即可.</li><li>  退出到recovery主界面,勾选data,点击启用MTP模式,这时候你就可以在我的电脑里面看见小米5sp的分区.现在是可读写的</li><li>  下载小米 5sp,LineageOS 最新版本,官网地址:<a href="https://download.lineageos.org/natrium">https://download.lineageos.org/natrium</a>, 下载即可,不翻墙貌似打不开,有能力的同学可以自己下,百度云盘地址:链接: <a href="https://pan.baidu.com/s/1xU1mwkSS6ZVnlNswDimXBQ">https://pan.baidu.com/s/1xU1mwkSS6ZVnlNswDimXBQ</a> 密码: e6bq</li><li>  把下好的rom,lineage-15.1-20180814-nightly-natrium-signed,这个压缩包直接拖到我的电脑里面的小米 5sp分区里面</li><li>  在recovery主界面点击清除—&gt;滑动恢复出厂设置</li><li>  在recovery主界面点击安装—&gt;找到刚才的拖进去的lineage-15.1-20180814-nightly-natrium-signed–&gt;刷入镜像—&gt;不要勾选Zip签名校验—-&gt;滑动按钮确认刷入.</li></ul><p><strong>note</strong></p><hr><h2 id="必须先双清-滑动恢复出厂设置-再输入-另外如果你不需要google服务-goole的人脸解锁功能-教程到此就结束了-重启手机即可"><a href="#必须先双清-滑动恢复出厂设置-再输入-另外如果你不需要google服务-goole的人脸解锁功能-教程到此就结束了-重启手机即可" class="headerlink" title="必须先双清(滑动恢复出厂设置)再输入,另外如果你不需要google服务,goole的人脸解锁功能,教程到此就结束了,重启手机即可"></a>必须先双清(滑动恢复出厂设置)再输入,另外如果你不需要google服务,goole的人脸解锁功能,教程到此就结束了,重启手机即可</h2><h2 id="刷入Gapps"><a href="#刷入Gapps" class="headerlink" title="刷入Gapps"></a>刷入Gapps</h2><p>因为版权原因,LineageOS rom是不集成google相关服务的.所以要自己手动刷入,Gapps就是google服务开源的一个项目工程</p><ul><li>下载地址 <a href="https://opengapps.org/,%E9%80%89%E6%8B%A9">https://opengapps.org/,选择</a> arm64–&gt;8.1,右边的根据需要选择,各版本的区别可以看这个博客<a href="https://jakting.com/archives/gapps-links-what.html">https://jakting.com/archives/gapps-links-what.html</a>, 建议选择第一个aroma,可以自己选择需要哪些东西,如果你是小白,就根据需要来吧. <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/18-8-21/9172850.jpg"></li><li>第一个选项有点大,1点多个G,等我有时间把百度网盘地址补上去,nano版本的网盘地址:链接: <a href="https://pan.baidu.com/s/1dTW11cJxyRcPldxmYAD5Hw">https://pan.baidu.com/s/1dTW11cJxyRcPldxmYAD5Hw</a> 密码: 62ut</li><li>跟刷入rom的方式一样,把下载的Gapps zip安装包拖到手机里,安装即可,如果你下载的是第一个版本,安装过程中会让你选择要安装的软件,看清楚提示,安装即可.(有点英文能力的应该都可以看懂,这里不在截图说明)</li></ul><p><strong>note</strong></p><hr><h2 id="如果你不root-教程到这里就结束了-重启手机即可-如果你刷完rom重启了-你再刷入Gapps的时候一定要双清-不然就会可能会遇到google-paly停止的异常"><a href="#如果你不root-教程到这里就结束了-重启手机即可-如果你刷完rom重启了-你再刷入Gapps的时候一定要双清-不然就会可能会遇到google-paly停止的异常" class="headerlink" title="如果你不root,教程到这里就结束了,重启手机即可,如果你刷完rom重启了,你再刷入Gapps的时候一定要双清,不然就会可能会遇到google paly停止的异常"></a>如果你不root,教程到这里就结束了,重启手机即可,如果你刷完rom重启了,你再刷入Gapps的时候一定要双清,不然就会可能会遇到google paly停止的异常</h2><h2 id="获取root权限"><a href="#获取root权限" class="headerlink" title="获取root权限"></a>获取root权限</h2><ul><li>  下载获取root的二进制文件,官网地址:<a href="https://download.lineageos.org/extras,%E9%80%89%E6%8B%A9addonsu-15.1-arm64-signed.zip">https://download.lineageos.org/extras,选择addonsu-15.1-arm64-signed.zip</a>, 输入即可.百度云盘地址:链接: <a href="https://pan.baidu.com/s/1ncqg6nR4RedfC8zPsahVFg">https://pan.baidu.com/s/1ncqg6nR4RedfC8zPsahVFg</a> 密码: vshs</li></ul><p><strong>note</strong></p><hr><h2 id="最好把获取root权限这一步放到刷Gapps前面-为了讲解顺序我写到了最后"><a href="#最好把获取root权限这一步放到刷Gapps前面-为了讲解顺序我写到了最后" class="headerlink" title="最好把获取root权限这一步放到刷Gapps前面,为了讲解顺序我写到了最后"></a>最好把获取root权限这一步放到刷Gapps前面,为了讲解顺序我写到了最后</h2><h2 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h2><p>在recovery点击重启的时候,有一个提示,选择不,下载再说就行.</p><h2 id="见证奇迹的时刻"><a href="#见证奇迹的时刻" class="headerlink" title="见证奇迹的时刻"></a>见证奇迹的时刻</h2><p><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/18-8-21/32407377.jpg"></p><p>点击设置—&gt;安全和隐私,选择SmartLock开始人脸识别解锁 在亮屏的时候,你会开到下面的小锁开了,人脸识别成功.</p><p><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/18-8-21/75078562.jpg"> <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/18-8-21/64971698.jpg"></p><p>点击设置—&gt;关于手机—&gt;点击版本号五六下—&gt;进入开发者模式—&gt;开启和禁用root</p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>楼主在实际使用的过程中,并没有什么明显的bug,双卡双待的时候有可能有一个卡的信号不是很好.原生体验起来还是很舒服的,提前挂个vpn.楼中在写的过程中,肯定有错别字,小时候语文老师交的不好,要怪怪她好了.本教程没有什么技术含量,有什么问题可以留言,一般都可以解决</p><ul><li>  在开发者选项中–&gt;内存–&gt;开机时启动应用–&gt;可以选择相应的应用,不让开机自启</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;作为一个屌丝,非常的喜欢小米,也看好小米,但是最近小米一系列的做法,让我慢慢对它失去了信心和热情.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; 小米8探索版</summary>
      
    
    
    
    <category term="业余爱好" scheme="https://www.lishenghui.top/categories/%E4%B8%9A%E4%BD%99%E7%88%B1%E5%A5%BD/"/>
    
    
  </entry>
  
  <entry>
    <title>Flutter坑</title>
    <link href="https://www.lishenghui.top/2018/08/15/flutter-bug/"/>
    <id>https://www.lishenghui.top/2018/08/15/flutter-bug/</id>
    <published>2018-08-15T07:06:34.000Z</published>
    <updated>2021-06-09T11:51:30.579Z</updated>
    
    <content type="html"><![CDATA[<ol><li> 创建项目的时候不要勾选kotlin</li><li> Waiting for another flutter command to release the startup lock,打开flutter的安装目录/bin/cache/ ,删除lockfile文件</li><li> 事件流是“向上”传递的，而状态流是“向下”传递的</li><li> setState()之后会调用build方法</li><li> 报错 Expected a key while parsing a block mapping. assets: 竟然是因为assets和- images的缩进原因.我也是醉了.</li></ol><h1 id="学习随机"><a href="#学习随机" class="headerlink" title="学习随机"></a>学习随机</h1><p><strong>java 语法和dart语法的异同</strong> * <a href="http://dart.goodev.org/guides/language/language-tour">http://dart.goodev.org/guides/language/language-tour</a> * <a href="https://codelabs.developers.google.com/codelabs/from-java-to-dart">https://codelabs.developers.google.com/codelabs/from-java-to-dart</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt; 创建项目的时候不要勾选kotlin&lt;/li&gt;
&lt;li&gt; Waiting for another flutter command to release the startup lock,打开flutter的安装目录/bin/cache/ ,删除lockfile文</summary>
      
    
    
    
    <category term="工作总结" scheme="https://www.lishenghui.top/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="Flutter" scheme="https://www.lishenghui.top/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>2018年技术学习计划以及现有进度</title>
    <link href="https://www.lishenghui.top/2018/04/18/2018plan/"/>
    <id>https://www.lishenghui.top/2018/04/18/2018plan/</id>
    <published>2018-04-18T02:31:37.000Z</published>
    <updated>2021-06-09T11:48:31.022Z</updated>
    
    <content type="html"><![CDATA[<h2 id="web前端相关内容"><a href="#web前端相关内容" class="headerlink" title="web前端相关内容"></a>web前端相关内容</h2><ol><li> DOM和BOM,JS基础已经学完,接下来进行JS高级实践和动画</li></ol><h2 id="Android组件化架构的理解和实践"><a href="#Android组件化架构的理解和实践" class="headerlink" title="Android组件化架构的理解和实践"></a>Android组件化架构的理解和实践</h2><ol><li> 可以搭建一个架构,现在正在进行gradle的初级学习</li></ol><h2 id="kotlin在Android中的使用"><a href="#kotlin在Android中的使用" class="headerlink" title="kotlin在Android中的使用"></a>kotlin在Android中的使用</h2><ol><li> 可以写一个简单的app就好,现在可以使用kotlin发起一个url请求,路还很长</li></ol><p><strong>2018,努力努力,争取实现上面的三个目标,2019年争取可以正常的进行RN和Android底层的研究</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;web前端相关内容&quot;&gt;&lt;a href=&quot;#web前端相关内容&quot; class=&quot;headerlink&quot; title=&quot;web前端相关内容&quot;&gt;&lt;/a&gt;web前端相关内容&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt; DOM和BOM,JS基础已经学完,接下来进行JS高级实践和动画&lt;/li</summary>
      
    
    
    
    <category term="工作总结" scheme="https://www.lishenghui.top/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="2018" scheme="https://www.lishenghui.top/tags/2018/"/>
    
    <category term="学习计划" scheme="https://www.lishenghui.top/tags/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin for android Developers 笔记</title>
    <link href="https://www.lishenghui.top/2018/04/18/kotlin/"/>
    <id>https://www.lishenghui.top/2018/04/18/kotlin/</id>
    <published>2018-04-18T02:30:16.000Z</published>
    <updated>2021-06-09T11:53:01.612Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">fun</span> <span class="token function">niceToast</span><span class="token punctuation">(</span>message<span class="token operator">:</span> String<span class="token punctuation">,</span>tag<span class="token operator">:</span> String <span class="token operator">=</span> javaClass<span class="token operator">&lt;</span>MainActivity<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>length<span class="token operator">:</span> Int <span class="token operator">=</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"[<span class="token interpolation variable">$className</span>] <span class="token interpolation variable">$message</span>"</span><span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>实际写的时候,javaClass().getSimpleName(),这个javaClass并不能导包,最后换成了javaClass.simpleName</p><p>点击去看源代码如下:</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token comment">/** * Returns the runtime Java class of this object. */</span><span class="token keyword">public</span> <span class="token keyword">inline</span> <span class="token keyword">val</span> <span class="token operator">&lt;</span>T<span class="token operator">:</span> Any<span class="token operator">></span> T<span class="token punctuation">.</span>javaClass <span class="token operator">:</span> Class<span class="token operator">&lt;</span>T<span class="token operator">></span>    <span class="token annotation builtin">@Suppress</span><span class="token punctuation">(</span><span class="token string">"UsePropertyAccessSyntax"</span><span class="token punctuation">)</span>    <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">as</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Object<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Class<span class="token operator">&lt;</span>T<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">val</span> forecastList <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>forecast_list<span class="token punctuation">)</span> <span class="token keyword">as</span> RecyclerView<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个写的时候直接报错,按照IDE的提示现在变成了</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin">findViewById<span class="token operator">&lt;</span>RecyclerView<span class="token operator">></span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>forecast_list<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token function">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">Request</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    uiThread <span class="token punctuation">&#123;</span> <span class="token function">longToast</span><span class="token punctuation">(</span><span class="token string">"Request performed"</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这个async方法已经过时,取而代之的是:</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin">doAsync <span class="token punctuation">&#123;</span>    <span class="token function">Request</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    uiThread <span class="token punctuation">&#123;</span> <span class="token function">longToast</span><span class="token punctuation">(</span><span class="token string">"开始请求"</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-kotlin&quot; data-language=&quot;kotlin&quot;&gt;&lt;code class=&quot;language-kotlin&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;fun&lt;/span&gt; &lt;span </summary>
      
    
    
    
    <category term="工作总结" scheme="https://www.lishenghui.top/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="kotlin" scheme="https://www.lishenghui.top/tags/kotlin/"/>
    
    <category term="笔记" scheme="https://www.lishenghui.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Gradle学习笔记(-)</title>
    <link href="https://www.lishenghui.top/2018/04/13/gradle/"/>
    <id>https://www.lishenghui.top/2018/04/13/gradle/</id>
    <published>2018-04-13T12:36:44.000Z</published>
    <updated>2021-06-09T11:51:48.185Z</updated>
    
    <content type="html"><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>gradle 命令会在当前目录中查找一个叫 build.gradle 的文件,它是一个构建配置脚本 (build configuration script). 这个脚本定义了一个 project 和它的 tasks. “&lt;&lt;” 表示向 helloWorld 中加入执行代码,创建hello之后执行,等同于doLast.</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">task hello <span class="token punctuation">&#123;</span>    doLast <span class="token punctuation">&#123;</span>        println <span class="token string">'Hello world'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">task helloWorld <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    println <span class="token string gstring">"Hello World"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>执行代码,在相同的目录,<code>gradle -q helloWorld</code>,-q代表 quiet 模式. 它不会生成 Gradle 的日志信息 (log messages).</p><h2 id="语法-见一个学一个"><a href="#语法-见一个学一个" class="headerlink" title="语法(见一个学一个)"></a>语法(见一个学一个)</h2><ol><li> 兼容java语法</li><li> times,整数循环的终点,循环还有其他upto</li></ol><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy"><span class="token number">4</span><span class="token punctuation">.</span>times <span class="token punctuation">&#123;</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string gstring">"<span class="token expression"><span class="token punctuation">$</span>it</span>"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="任务依赖"><a href="#任务依赖" class="headerlink" title="任务依赖"></a>任务依赖</h2><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">task taskB <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"我是任务B"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">task <span class="token function">taskA</span><span class="token punctuation">(</span>dependsOn<span class="token punctuation">:</span> taskB<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"我是任务A"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在taskA执行前会执行taskB,但是前提是taskB必须提前定义</p><h3 id="懒依赖"><a href="#懒依赖" class="headerlink" title="懒依赖"></a>懒依赖</h3><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">task <span class="token function">taskX</span><span class="token punctuation">(</span>dependsOn<span class="token punctuation">:</span> <span class="token string">'taskY'</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"我是任务X"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">task taskY <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"我是任务Y"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>后面加了’’号的taskY,相当于先进行了声明,所以taskY可以在去用的时候在取值</p><h2 id="动态任务"><a href="#动态任务" class="headerlink" title="动态任务"></a>动态任务</h2><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy"><span class="token number">4</span><span class="token punctuation">.</span>times <span class="token punctuation">&#123;</span>i <span class="token operator">-></span>    task <span class="token string gstring">"task<span class="token expression"><span class="token punctuation">$</span>i</span>"</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"I'm task number <span class="token expression"><span class="token punctuation">$</span>i</span>"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运用了lambda表达式,挺好</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy"><span class="token operator">></span> gradle <span class="token operator">-</span>q task0I'm task number <span class="token number">2</span>I'm task number <span class="token number">3</span>I'm task number <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">task0<span class="token punctuation">.</span>dependsOn task2<span class="token punctuation">,</span> task3task hello <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"Hello Earth"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>hello<span class="token punctuation">.</span>doLast<span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"任务之后"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>hello<span class="token punctuation">.</span>doFirst<span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"任务之前"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>hello <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"I am lastest"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当任务执行的时候, 在动作列表里的动作将被按顺序执行. 这里第四个行为中 &lt;&lt; 操作符是 doLast 的简单别称.看一眼全明白了,soeasy</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">task hello <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">'Hello world'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>hello<span class="token punctuation">.</span>doLast <span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"来自<span class="token expression"><span class="token punctuation">$</span>hello<span class="token punctuation">.</span>name</span> task 的问候"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>task 可以看做gradle的属性,所以可以用$任务名表示</p><h2 id="自定义任务属性"><a href="#自定义任务属性" class="headerlink" title="自定义任务属性"></a>自定义任务属性</h2><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">task myTask<span class="token punctuation">&#123;</span>    ext<span class="token punctuation">.</span>myProperty <span class="token operator">=</span> <span class="token string gstring">"myValue"</span><span class="token punctuation">&#125;</span>task printTaskProps <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span>myTask<span class="token punctuation">.</span>myProperty<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>note</strong> ext是extensions的缩写,可以直接写成extensions</p><h2 id="调用Ant任务"><a href="#调用Ant任务" class="headerlink" title="调用Ant任务"></a>调用Ant任务</h2><p>** Ant任务 ** ant 是一个将软件编译、测试、部署等步骤联系在一起加以自动化的一个工具，大多用于Java环境中的软件开发。在实际软件开发中，有很多地方可以用到ant。Ant运行是需要一个xml文件</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">task loadFile <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">def</span> files <span class="token operator">=</span> <span class="token function">file</span><span class="token punctuation">(</span><span class="token string">'xml'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    files<span class="token punctuation">.</span>each <span class="token punctuation">&#123;</span> File file <span class="token operator">-></span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            ant<span class="token punctuation">.</span><span class="token function">loadfile</span><span class="token punctuation">(</span>srcFile<span class="token punctuation">:</span> file<span class="token punctuation">,</span>property<span class="token punctuation">:</span> file<span class="token punctuation">.</span>name<span class="token punctuation">)</span>            <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"**<span class="token expression"><span class="token punctuation">$</span>file<span class="token punctuation">.</span>name</span>"</span><span class="token punctuation">)</span>            <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"<span class="token expression"><span class="token punctuation">$</span><span class="token punctuation">&#123;</span>ant<span class="token punctuation">.</span>properties<span class="token punctuation">[</span>file<span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>def 用来定义类型,each是遍历,ant.properties[file.name]是取所有属性中的file.name的属性 ant.loadfile(srcFile: file,property: file.name) 其实配置的就是下面哪个xml文件的配置</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy"><span class="token operator">&lt;</span>loadfile property<span class="token operator">=</span><span class="token string gstring">"message"</span>          srcFile<span class="token operator">=</span><span class="token string gstring">"message.txt"</span><span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>** 抽取封装 **</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">File<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">fileList</span><span class="token punctuation">(</span>String dir<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">file</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>file <span class="token operator">-></span> file<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">as</span> FileFilter<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>task loadFile <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    <span class="token function">fileList</span><span class="token punctuation">(</span><span class="token string gstring">"xml"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>each <span class="token punctuation">&#123;</span>File file <span class="token operator">-></span>        ant<span class="token punctuation">.</span><span class="token function">loadfile</span><span class="token punctuation">(</span>srcFile<span class="token punctuation">:</span> file<span class="token punctuation">,</span>property<span class="token punctuation">:</span> file<span class="token punctuation">.</span>name<span class="token punctuation">)</span>        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"I'm found of <span class="token expression"><span class="token punctuation">$</span>file<span class="token punctuation">.</span>name</span>"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这种脚本语言写着就是爽,真是语法糖可以甜死我,尤其是as的使用,把这一点体现的淋漓尽致</p><h2 id="默认任务"><a href="#默认任务" class="headerlink" title="默认任务"></a>默认任务</h2><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">defaultTasks <span class="token string">'clean'</span><span class="token punctuation">,</span><span class="token string">'run'</span>task clean <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"默认清理任务"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>task run <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"默认运行任务"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>task other <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"其他任务"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy"><span class="token operator">></span> gradle <span class="token operator">-</span>q<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>相当于执行 gradle -q clean run</p><h2 id="DAG配置"><a href="#DAG配置" class="headerlink" title="DAG配置"></a>DAG配置</h2><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">task distribution <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"version=<span class="token expression"><span class="token punctuation">$</span>version</span>"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>task <span class="token function">debug</span><span class="token punctuation">(</span>dependsOn<span class="token punctuation">:</span> distribution<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"正在编译debug"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>task <span class="token function">release</span><span class="token punctuation">(</span>dependsOn<span class="token punctuation">:</span> distribution<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">&#123;</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string gstring">"正在编译release"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>gradle<span class="token punctuation">.</span>taskGraph<span class="token punctuation">.</span>whenReady <span class="token punctuation">&#123;</span> taskGraph <span class="token operator">-></span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>taskGraph<span class="token punctuation">.</span><span class="token function">hasTask</span><span class="token punctuation">(</span>debug<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        version <span class="token operator">=</span> <span class="token string">'debug 1.0'</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        version <span class="token operator">=</span> <span class="token string gstring">"release 1.0"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里面的version本身就是就是已有的字段,已经gradle可以直接使用,所以没有定义的字段.其中taskGraph.whenReady在graph has been populated的时候执行,相当于监听.<a href="https://docs.gradle.org/current/javadoc/org/gradle/api/execution/TaskExecutionGraph.html">API文档</a></p><p><strong>参考文献:</strong> <a href="https://docs.gradle.org/current/userguide/installation.html">https://docs.gradle.org/current/userguide/installation.html</a> <a href="https://dongchuan.gitbooks.io/gradle-user-guide-/installing/_gradle/jvm/_options.html">https://dongchuan.gitbooks.io/gradle-user-guide-/installing\_gradle/jvm\_options.html</a> <a href="https://www.cnblogs.com/hoojo/archive/2013/06/14/java/_ant/_project/_target/_task/_run.html">https://www.cnblogs.com/hoojo/archive/2013/06/14/java\_ant\_project\_target\_task\_run.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h2&gt;&lt;p&gt;gradle 命令会在当前目录中查找一个叫 build.gradle 的文件,它是一个构建配置脚本 (build configuration</summary>
      
    
    
    
    <category term="MusiccUU" scheme="https://www.lishenghui.top/categories/MusiccUU/"/>
    
    
    <category term="Gradle gradle使用" scheme="https://www.lishenghui.top/tags/Gradle-gradle%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>工作中遇到的bug</title>
    <link href="https://www.lishenghui.top/2018/04/11/androidstuido-bug01/"/>
    <id>https://www.lishenghui.top/2018/04/11/androidstuido-bug01/</id>
    <published>2018-04-11T02:32:20.000Z</published>
    <updated>2021-06-09T11:49:53.399Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AndroidStuido-内置git检索不到部分module"><a href="#AndroidStuido-内置git检索不到部分module" class="headerlink" title="AndroidStuido 内置git检索不到部分module"></a>AndroidStuido 内置git检索不到部分module</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>现在开发Android基本上都是组件化或者插件化,也有可能是仅仅分了一下模块,模块化,问题就出在,在把各个模块clone到本地以后,发现AS的版本管理工具并没有把所有的module都检索出来,而sourceTree这个软件倒是可以,作为一名喜欢点点点的赖程序员简直要命(因为AS把git封装的很好).在网上搜了一圈之后发现并没有找到答案,自己动手,丰衣足食,只有自己研究了……..一个月后,研究出了答案.</p><h3 id="如何解决"><a href="#如何解决" class="headerlink" title="如何解决"></a>如何解决</h3><ol><li> 在project目录下,找到.idea文件夹—&gt;vcs文件</li><li> 在app目录下,找到.idea文件夹—-&gt;vcs文件</li><li> 对比两个文件下面引用的module的git目录,你会发现,AS缺少引用的module,在app的vcs文件目录不存在,好了,按照文件的格式添加上去即可.</li><li> 保存一下,到AS中看一下是不是惊奇的发现内置git版本管理工具已经全部都引用上了</li></ol><h2 id="AS-3-1-2在项目中添加library-module-失败"><a href="#AS-3-1-2在项目中添加library-module-失败" class="headerlink" title="AS 3.1.2在项目中添加library module 失败"></a>AS 3.1.2在项目中添加library module 失败</h2><h3 id="问题描述及解决"><a href="#问题描述及解决" class="headerlink" title="问题描述及解决"></a>问题描述及解决</h3><p>在工程文件中导入一个library module,发现并没有编译和建立索引,经过一系列的查找,AS没有在setting.gradle后面追加library module的名字,在原有的名字后面加上&lt;,module的名字&gt;即可</p><h2 id="MediaPlayer播放音频遇到的坑"><a href="#MediaPlayer播放音频遇到的坑" class="headerlink" title="MediaPlayer播放音频遇到的坑"></a>MediaPlayer播放音频遇到的坑</h2><h3 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h3><p>在调用prepareAsync()或者prepare()的时候,不断的出错,各种尝试都不行,原来是在播放完成的时候调用了release()方法,这个方法一般是不再使用的时候去释放资源,和MediaPlayer对象=null连用,问题就出现在这里,去掉调用即可;</p><h2 id="AS3-0以上-侧边栏Device-File-Exprorer-游览权限"><a href="#AS3-0以上-侧边栏Device-File-Exprorer-游览权限" class="headerlink" title="AS3.0以上 侧边栏Device File Exprorer 游览权限"></a>AS3.0以上 侧边栏Device File Exprorer 游览权限</h2><p>小米手机上面获取root权限以后,但是并不能保存系统的内部文件到电脑,提示没有权限.</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>命令行 输入adb root 即可,意思是adb 带着root权限重新启动</p><h2 id="windowSoftInputMode解决软键盘遮挡遇到的坑"><a href="#windowSoftInputMode解决软键盘遮挡遇到的坑" class="headerlink" title="windowSoftInputMode解决软键盘遮挡遇到的坑"></a>windowSoftInputMode解决软键盘遮挡遇到的坑</h2><p>中间是EditText,下面的黑色是代表功能区,当软键盘弹起来的时候,保证不能遮挡下面黑色的功能区</p><p><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/windowSoftInputMode.png"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java">android<span class="token operator">:</span>windowSoftInputMode<span class="token operator">=</span><span class="token string">"stateHiddenadjustResize"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当在清单文件中给Activity加上这句话,正常这样就可以了,但是,我做了一下这些操作,发现adjustResize并解决这些问题.</p><p>1.Activity加入代码全屏的代码:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">getWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span><span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span>FLAG_FULLSCREEN<span class="token punctuation">,</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span>FLAG_FULLSCREEN<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.在EditText的副布局中加入权重</p><p>以上两种情况,都会使软键盘遮挡下面的黑色区域,大致推断使因为adjustResize是去调整Activity的布局来兼容软键盘,这应该是跟adjustResize这个重新布局Activity的机制有关联,可以深入底层源码了解一下.</p><h2 id="centOS-不能联网"><a href="#centOS-不能联网" class="headerlink" title="centOS 不能联网"></a>centOS 不能联网</h2><p><strong><a href="https://blog.csdn.net/yuanxiang01/article/details/79328007">https://blog.csdn.net/yuanxiang01/article/details/79328007</a></strong></p><h2 id="AS彻底清除代理"><a href="#AS彻底清除代理" class="headerlink" title="AS彻底清除代理"></a>AS彻底清除代理</h2><p>在.gradle问价家下面,找到.gradle\gradle.properties,去掉里面的代理</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;AndroidStuido-内置git检索不到部分module&quot;&gt;&lt;a href=&quot;#AndroidStuido-内置git检索不到部分module&quot; class=&quot;headerlink&quot; title=&quot;AndroidStuido 内置git检索不到部分modul</summary>
      
    
    
    
    <category term="工作总结" scheme="https://www.lishenghui.top/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="AndroidStudio git bug" scheme="https://www.lishenghui.top/tags/AndroidStudio-git-bug/"/>
    
  </entry>
  
  <entry>
    <title>RN遇到的一些坑(不断的持续更新)</title>
    <link href="https://www.lishenghui.top/2017/07/07/rn-bug/"/>
    <id>https://www.lishenghui.top/2017/07/07/rn-bug/</id>
    <published>2017-07-07T03:10:12.000Z</published>
    <updated>2021-06-09T08:47:43.322Z</updated>
    
    <content type="html"><![CDATA[<h2 id="建议看原英文原文档"><a href="#建议看原英文原文档" class="headerlink" title="建议看原英文原文档"></a>建议看原英文原文档</h2><ol><li> sudo lsof -i :8081 查看端口的占用</li><li> 在杀死进程的时候提示kill -9 .写的时候一定不要带后面的&lt;&gt;号;</li><li> 在github下载项目的时候,貌似npm的版本不对,运行npm istall一直不动,就把其他项目的node_modules给直接拷贝过来解决.</li><li> 如果报下面这个错误:but primary configuration failure takes precedence. java.lang.RuntimeException: SDK location not found. Define location with sdk.dir in the local.properties file or with an ANDROID_HOME environment variable. 就在Android文件夹下创建一个local.properties文件,并sdk.dir = /Users/zl/Library/Android/sdk,这时我的mac下的sdk路径,写上自己的sdk路径就行.其他Android问题可以直接改gradle</li><li> Android下编译版本不统一,在项目的gradle下面这么写:</li></ol><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">subprojects    afterEvaluate <span class="token punctuation">&#123;</span>project <span class="token operator">-></span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>project<span class="token punctuation">.</span><span class="token function">hasProperty</span><span class="token punctuation">(</span><span class="token string gstring">"android"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            android <span class="token punctuation">&#123;</span>                compileSdkVersion <span class="token number">25</span>                buildToolsVersion <span class="token string">'25.0.2'</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;建议看原英文原文档&quot;&gt;&lt;a href=&quot;#建议看原英文原文档&quot; class=&quot;headerlink&quot; title=&quot;建议看原英文原文档&quot;&gt;&lt;/a&gt;建议看原英文原文档&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt; sudo lsof -i :8081 查看端口的占用&lt;/li&gt;
&lt;li</summary>
      
    
    
    
    <category term="ReactNative" scheme="https://www.lishenghui.top/categories/ReactNative/"/>
    
    
    <category term="RN" scheme="https://www.lishenghui.top/tags/RN/"/>
    
    <category term="报错总结" scheme="https://www.lishenghui.top/tags/%E6%8A%A5%E9%94%99%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>DataBinding详细的使用方法及工作中常遇到的问题</title>
    <link href="https://www.lishenghui.top/2017/06/16/databinding/"/>
    <id>https://www.lishenghui.top/2017/06/16/databinding/</id>
    <published>2017-06-16T06:41:13.000Z</published>
    <updated>2021-06-09T11:51:08.082Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>用DataBinding差不多现经手了三个项目,也用它开发了一年左右,对它的特性以及使用方面有了一些自己的理解,这里面可以和大家一起分享一下,详解DataBinding文档中的知识点,以及工作中可能遇到的一些问题,我每讲一部分都是写一个相应的demo以供参考.</p><h2 id="DataBinding是什么"><a href="#DataBinding是什么" class="headerlink" title="DataBinding是什么?"></a>DataBinding是什么?</h2><p>官网文档地址:<a href="https://developer.android.com/topic/libraries/data-binding/index.html">https://developer.android.com/topic/libraries/data-binding/index.html</a><br>翻译文档:自己谷歌搜索,网上已经有,这里就不再翻译<br>官方文档的原话是:Data Binding Library to write declarative layouts and minimize the glue code necessary to bind your application logic and layouts,The Data Binding Library offers both flexibility and broad compatibility — cover: ‘<a href="https://cdn.jsdelivr.net/gh/adonis-lsh/image_storage/img/2021/bug_cover.png&#39;">https://cdn.jsdelivr.net/gh/adonis-lsh/image_storage/img/2021/bug_cover.png&#39;</a><br>top_img: ‘<a href="https://cdn.jsdelivr.net/gh/adonis-lsh/image_storage/img/2021/conver2.jpg&#39;it&#39;s">https://cdn.jsdelivr.net/gh/adonis-lsh/image_storage/img/2021/conver2.jpg&#39;it&#39;s</a> a support library,大致的意思就是DataBinding是一个通过胶水代码写声明布局文件并减少绑定应用程序逻辑的一个具有兼容和灵活性的一个支持库.看了之后还是一脸懵逼,不要紧,学知识嘛,慢慢来.</p><h2 id="如何集成"><a href="#如何集成" class="headerlink" title="如何集成"></a>如何集成</h2><p>集成很简单,在你app module的Gradle下面添加的代码:</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">android <span class="token punctuation">&#123;</span>    <span class="token punctuation">....</span>    dataBinding <span class="token punctuation">&#123;</span>        enabled <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>提醒:现在建议大家的AS更新到最新,目前最新稳定版式2.3.3.另外,你们公司如果接受了DataBinding这个还算有点新的东西,那么我建议大家使用JDK1.8,具体的详细介绍,请看官网上面的介绍,<a href="https://developer.android.com/guide/platform/j8-jack.html">https://developer.android.com/guide/platform/j8-jack.html</a>.</p><p>AS2.1以上才支持jack,如果你得AS版本比较低的话,可以使用兼容库Retrolambda.目前的稳定版而言,暂时不能使用instant run.<br>集成如下:</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">android <span class="token punctuation">&#123;</span>    defaultConfig <span class="token punctuation">&#123;</span>        <span class="token punctuation">....</span>        jackOptions <span class="token punctuation">&#123;</span>            enabled <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">....</span>    compileOptions <span class="token punctuation">&#123;</span>        sourceCompatibility JavaVersion<span class="token punctuation">.</span>VERSION_1_8        targetCompatibility JavaVersion<span class="token punctuation">.</span>VERSION_1_8    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>note:如果你用的AS3.0的话,就可以不通过jack进行编译,而且可以使用instant run,还加快的编译速度.具体的介绍:<br><a href="http://developers.googleblog.cn/2017/05/android-studio-30-canary-1.html">http://developers.googleblog.cn/2017/05/android-studio-30-canary-1.html</a></p><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>在工作中,我们经常遇到请求到一个对象,然后对象的信息需要在xml中展示的情况,用它怎么做到吗?比普通的做法有什么优势?<br>* 假如我们请求到的是一个学生的实体类,那么我们先创建一个学生类:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> headerImg<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getHeaderImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> headerImg<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHeaderImg</span><span class="token punctuation">(</span><span class="token class-name">String</span> headerImg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>headerImg <span class="token operator">=</span> headerImg<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>这个学生类包括姓名,年龄和头像的url,现在我们模拟一下网络请求:  @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_demo1); initData(); }  <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//模拟网络请求部分,假如请求到了一个学生实体</span>    <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"李宁"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setHeaderImg</span><span class="token punctuation">(</span><span class="token string">"http://i2.muimg.com/567571/b528af67d68f7597.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>下面正常的做法就是拿到xml里面的空间,然后一个一个赋值上去,是不是感觉这样做不仅要findViewById,还要拿到各种控件进行一系列的赋值挺麻烦的,这时候DataBinding的作用就展示出来了,数据绑定,就是要把数据直接绑定到xml上面.下面看我华丽的操作:</li></ul><h6 id="XMl中"><a href="#XMl中" class="headerlink" title="XMl中:"></a>XMl中:</h6><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>data</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>variable</span>        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>student<span class="token punctuation">"</span></span>        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.DataBinding.lsh.databindingdemo.Student<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>data</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>                  <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span>                  <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span>                  <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                  <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                  <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>                  <span class="token attr-name"><span class="token namespace">tools:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.DataBinding.lsh.databindingdemo.Demo1.Demo1Activity<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>跟布局的标签换了,换成了layout,其次多了data标签,下面有个一个varible标签,它的作用就是用来声明xml中绑定的变量,这里面的Type一定要写引用的全路径,不过好在现在都可以智能提示,打上一个Student,选择正确的一个,下面我们就要在xml的控件中绑定我们声明变量的字段,你可能会说,咦?student只是声明了,不是还没有给进行赋值吗?现在绑定上去不会报错吗?这个不用担心,它有一系列的默认值.一阵乱敲之后:</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>data</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>variable</span>            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>student<span class="token punctuation">"</span></span>            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.DataBinding.lsh.databindingdemo.Student<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>data</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>                  <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span>                  <span class="token attr-name"><span class="token namespace">xmlns:</span>fresco</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span>                  <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span>                  <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                  <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                  <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>                  <span class="token attr-name"><span class="token namespace">tools:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.DataBinding.lsh.databindingdemo.Demo1.Demo1Activity<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.facebook.drawee.view.SimpleDraweeView</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">fresco:</span>actualImageScaleType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fitXY<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">fresco:</span>placeholderImage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@mipmap/ic_launcher<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">fresco:</span>placeholderImageScaleType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>centerCrop<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">fresco:</span>roundAsCircle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>李宁<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>24sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>25<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>24sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-6-16/72379493.jpg"></p><p>我这里面用的加载图片的工具是fresco,它很强大,尤其在内存方面,而且还有一集成了一些常用的功能,比如圆形头像,圆角头像,gif播放,等常用的一些功能.</p><p><strong>接下来开始绑定:</strong><br><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-6-16/10176861.jpg"><br>先绑定TextView的属性,写法如上述图片,控件中自带的这些属性一般可以直接绑定,如果想绑定一些没有的属性,就需要自己去指定,下面绑定图片地址展示图片的时候会用到.我们xml中除了图片,文本就绑定好了,那么activity要怎么操作呢?</p><h6 id="在Activity中"><a href="#在Activity中" class="headerlink" title="在Activity中:"></a>在Activity中:</h6><p><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-6-16/68147946.jpg"></p><ul><li>  DataBinding通过DataBindingUtil来进行绑定视图,常用的有两个方法,一个是setContentView方法,一个是bind方法,前者一般用着Activity加载视图,后者就是Fragment等.</li><li>  一个xml对应一个Binding的java文件,这个文件是自动生成的,<strong>如果提示不出来这个类,重启As,如果还是不行,把项目中的build文件夹删除了,重新编译</strong>,满满的都是经验啊.这个类在build下面是可以找到的,路径如下图:<img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-6-16/1766341.jpg"></li><li>  最后我们对xml中的变量进行赋值</li></ul><p><strong>异常</strong><br>我们愉快的编译运行,忽然闪退了,看异常:<br><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-6-16/43621228.jpg"><br>点进去:<br><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-6-16/64324709.jpg"><br>mboundView2就是我们设置年龄文本,后面的studentAge就是我们设置的年龄,这地方怎么会报错呢?<br>想一想,原来是我们student的age是int类型的,但是text属性不能直接设置int类型,那怎么办?<br><strong>在string.xml中</strong></p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@&#123;@string/intToString(student.age)&#125;<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>24sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>在activity_demo1.xml中:</strong></p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@&#123;@string/intToString(student.age)&#125;<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>24sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其他的类型的转化就可以参照这个去改.</p><p><strong>绑定图片</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ViewBindAdapter</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@BindingAdapter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"bind:url"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setImgUrl</span><span class="token punctuation">(</span><span class="token class-name">SimpleDraweeView</span> imageView<span class="token punctuation">,</span> <span class="token class-name">String</span> uri<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">TextUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            imageView<span class="token punctuation">.</span><span class="token function">setImageURI</span><span class="token punctuation">(</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>xml中:</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.facebook.drawee.view.SimpleDraweeView</span>    <span class="token attr-name"><span class="token namespace">app:</span>url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@&#123;student.headerImg&#125;<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">fresco:</span>actualImageScaleType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fitXY<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">fresco:</span>placeholderImage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@mipmap/zhanwei<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">fresco:</span>placeholderImageScaleType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>centerCrop<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">fresco:</span>roundAsCircle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们新建一个类,专门存放绑定的自定义属性,@BindingAdapter({“bind:url”})这句主要是声明xml中写的自定义的属性,可以连续写多个,比如这种:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@BindingAdapter</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"uri"</span><span class="token punctuation">,</span> <span class="token string">"placeholderImageRes"</span><span class="token punctuation">,</span> <span class="token string">"request_width"</span><span class="token punctuation">,</span><span class="token string">"request_height"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> requireAll <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">loadImage</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ImageView</span> imageView<span class="token punctuation">,</span> <span class="token class-name">String</span> uri<span class="token punctuation">,</span>                               <span class="token annotation punctuation">@DrawableRes</span> <span class="token keyword">int</span> placeholderImageRes<span class="token punctuation">,</span>                               <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                               <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>requireAll = false的意思是不用写全所有参数,方法的第一个参数是控件的本身,就是这么简单,这样就可以绑定成功了.</p><p>note:注意app:url=”@{student.headerImg}”这个没有智能提示,代码颜色也没有改变,都是正常的,只要写对就行.</p><p>最新来一张图:<br><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-6-16/1186068.jpg"><br>到这里,这些基本的操作就完成了,你已经对databinding有了一个大体的认识,接下来的几篇,将会更加深入的介绍它的使用方法和底层的原理.<br>demo地址:<a href="https://github.com/adonis-lsh/DataBindingDemo">https://github.com/adonis-lsh/DataBindingDemo</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;用DataBinding差不多现经手了三个项目,也用它开发了一年左右,对它的特性以及使用方面有了一些自己的理解,这里面可以和大家一起分享一下</summary>
      
    
    
    
    <category term="工作总结" scheme="https://www.lishenghui.top/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="Android" scheme="https://www.lishenghui.top/tags/Android/"/>
    
    <category term="DataBinding" scheme="https://www.lishenghui.top/tags/DataBinding/"/>
    
  </entry>
  
  <entry>
    <title>ReactNative(环境搭建及工具配置)</title>
    <link href="https://www.lishenghui.top/2017/05/10/reactnative-01/"/>
    <id>https://www.lishenghui.top/2017/05/10/reactnative-01/</id>
    <published>2017-05-10T08:30:04.000Z</published>
    <updated>2021-06-09T08:10:07.902Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>个人感觉ReactNative慢慢的将会越来越流行,毕竟可以花一样的时间,甚至更少的时间开发兼容Android和IOS两个平台的应用,但是在这之前,我们需要了解一些前端知识,如JS和ES6等,那么我们就一步一步来学习这个框架是怎么使用的?</p><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><h3 id="安装Chocolatey"><a href="#安装Chocolatey" class="headerlink" title="安装Chocolatey"></a>安装Chocolatey</h3><p><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-5-10/53230823-file_1494398888415_8716.png"></p><p>在箭头处右键以管理员身份运行,然后输入命令</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Set-ExecutionPolicy AllSigned<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者命令</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Set-ExecutionPolicy AllSigned<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后再cmd命令窗口(以管理员身份运行,以下不在说明)输入以下代码:</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">@powershell -NoProfile -ExecutionPolicy Bypass -Command <span class="token string">"iex <span class="token variable"><span class="token punctuation">((</span>New<span class="token operator">-</span>Object System.Net.WebClient<span class="token punctuation">)</span>.DownloadString<span class="token punctuation">(</span>'https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>chocolatey.org<span class="token operator">/</span>install.ps1'<span class="token punctuation">))</span></span>"</span> <span class="token operator">&amp;&amp;</span> SET <span class="token string">"PATH=%PATH%;%ALLUSERSPROFILE%<span class="token entity" title="\c">\c</span>hocolatey<span class="token entity" title="\b">\b</span>in"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上面完成以后我们就完成了软件管理器Chocolatey 的安装,它的好处就是可以想linux一个通过命令便捷的安装所需软件.</p><h3 id="安装Python-2和Node"><a href="#安装Python-2和Node" class="headerlink" title="安装Python 2和Node"></a>安装Python 2和Node</h3><p>继续在命令窗口输入以下内容:</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">choco <span class="token function">install</span> python2 choco <span class="token function">install</span> nodejs.install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下面就去添加系统环境变量</p><p><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-5-10/66050026-file_1494400548707_181fe.png" alt="这里写图片描述"></p><p>如箭头所示:点击新建然后输入:</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>你的用户名<span class="token punctuation">\</span>AppData<span class="token punctuation">\</span>Roaming<span class="token punctuation">\</span>npm<span class="token punctuation">\</span>node_modules<span class="token punctuation">\</span>npm<span class="token punctuation">\</span>bin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后再你的输入命令npm,看环境变量是否配置成功.</p><p><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-5-10/63736876-file_1494401050176_170a9.png" alt="这里写图片描述"></p><p>如果如图所示,说明配置成功,配置成功以后我们就更改镜像源,改为国内的ip,如果你翻墙了,可以忽略. 输入以下代码:</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org --global <span class="token function">npm</span> config <span class="token builtin class-name">set</span> disturl https://npm.taobao.org/dist --global<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="安装eact-native-cli"><a href="#安装eact-native-cli" class="headerlink" title="安装eact-native-cli"></a>安装eact-native-cli</h3><p>代码如下:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g <span class="token function">yarn</span> react-native-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>它是用于执行创建、初始化、更新项目、运行打包服务（packager）等任务。 测试是否安装,cd到你想要创建文件的目录,然后输入:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">react-native init 任意的工程名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果正常运行并生成了一个工程,那么你的环境就配置好了.例如我在E:盘生成了一个HelloWorld,那么我怎么打开他呢?下面就用到了IDE.</p><h3 id="AS的安装和环境配置"><a href="#AS的安装和环境配置" class="headerlink" title="AS的安装和环境配置"></a>AS的安装和环境配置</h3><p>此处省去一万字,看我博客的基本上都是Android程序员,这个估计都已经配置好了,记得配置D:\AndroidSdk\tools和D:\AndroidSdk\platform-tools两个目录到path就好.</p><h2 id="WebStorm的配置"><a href="#WebStorm的配置" class="headerlink" title="WebStorm的配置"></a>WebStorm的配置</h2><h3 id="外观配置"><a href="#外观配置" class="headerlink" title="外观配置"></a>外观配置</h3><p>为什么要选用它,因为我们开发Android的几乎都是用的AS啊,当然也有少部分人用的是Eclipse,WS(WebStorm简称)和AS的配置文件是可以相互通用的,如何把我们AS常用的字体大小,配色,主题风格移植过来呢?看图</p><p><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-5-10/79971623-file_1494402475877_5393.png" alt="这里写图片描述"> <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-5-10/30692101-file_1494402597160_e615.png" alt="这里写图片描述"></p><p>不需要的配置都把它给去掉,然后点击OK就会在指定目录生成一个settings.jar,好了我们现在打开WS,点击File,同AS,只不过是点击Import Settings.选你刚保存Setting,jar.到这里,你的WS和AS风格基本上就同意了,git,svn什么的也不用重新配置了.</p><h3 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h3><p>现在就让我们打开刚才生成的HelloWorld项目吧,点击File-&gt;Open,选你刚才的项目目录,然后如下图:</p><p><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-5-10/80579059-file_1494403445463_de49.png" alt="这里写图片描述"></p><p>你发现并没有运行的那个三角符号,下面我们就配置:</p><p><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-5-10/17206014-file_1494403538487_e227.png" alt="这里写图片描述"> <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-5-10/85943741-file_1494403576185_1187e.png" alt="这里写图片描述"> <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-5-10/97964238-file_1494403715196_12824.png" alt="这里写图片描述"></p><p>点击向下的箭头,有相应的提示,选上去.</p><p><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-5-10/17137748-file_1494403817626_bb6c.png" alt="这里写图片描述"></p><p>然后选择你的项目,点击Apply,好了,现在你开一个模拟器或者真机,你就可以运行了. <strong>note</strong> WS最好以管理员身份运行.还有就是我们在同时开了两个项目的同时,有可能出现以下错误: ERROR Packager can’t listen on port 8081 说明有一个项目正在调试,没有关闭.在运行另一个项目的时候,记得点击当前项目的</p><p>本人也是刚开始研究RN,有兴趣的小伙伴可以一起学习.</p><h2 id="后序"><a href="#后序" class="headerlink" title="后序"></a>后序</h2><p>现在改用mac本后,遇见了坑,还是提示: ERROR Packager can’t listen on port 8081 下面说让输入命令:lsof -i :8081 查看端口信息,然后再通过命令:kill -9 杀死端口,后面这条命令就是坑啊,不带&lt;&gt;,直接写端口号才会正确执行.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;个人感觉ReactNative慢慢的将会越来越流行,毕竟可以花一样的时间,甚至更少的时间开发兼容Android和IOS两个平台的应用,但是在</summary>
      
    
    
    
    <category term="ReactNative" scheme="https://www.lishenghui.top/categories/ReactNative/"/>
    
    
    <category term="ReactNative" scheme="https://www.lishenghui.top/tags/ReactNative/"/>
    
    <category term="RN工具配置" scheme="https://www.lishenghui.top/tags/RN%E5%B7%A5%E5%85%B7%E9%85%8D%E7%BD%AE/"/>
    
    <category term="RN环境搭建" scheme="https://www.lishenghui.top/tags/RN%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>通过颜色矩阵创建花样二维码</title>
    <link href="https://www.lishenghui.top/2017/05/09/qrcode/"/>
    <id>https://www.lishenghui.top/2017/05/09/qrcode/</id>
    <published>2017-05-09T08:26:33.000Z</published>
    <updated>2021-06-09T11:54:41.013Z</updated>
    
    <content type="html"><![CDATA[<p>如何是你的二维码更有个性,比如微信,支付宝,他们都有切换不同样式的二维码,如何自己也实现一个呢? 二维码说白了就是上面的黑白点相当于计算机的0,1代码来储存的数据,所以我们可以改变黑色的点为其他深色的点,信息一样不会丢失,基于这些,我们就可以做一些花样的二维码出来了 废话不多说,先上图.</p><p><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-5-9/46671669-file_1494316087189_10462.gif"></p><p>为了模拟,我选了几张水印图,已经有正方形空白的背景图,还有包含背景图空白位置坐标的json.</p><p><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-5-9/76587176-file_1494317104939_e3bd.png"> - 第一个集合里面存放的是水印图片 - 第二个集合里面存放的是含有中心空白方块的背景图片 - 第三个集合里面存放的是包含背景图空白位置坐标的json 下面说说我的两种思路.</p><h2 id="第一种-程序员的思路"><a href="#第一种-程序员的思路" class="headerlink" title="第一种:程序员的思路:"></a>第一种:程序员的思路:</h2><ol><li> 先生成一个二维码</li><li> 把二维码的像素点和水印图片的像素点进行重新的颜色组合生成一张新的图片</li><li>把这张图片画到背景图片的空白区域 <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> drawableList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>a<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>b<span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>c<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>d<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>e<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>f<span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>g<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>h<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>i<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>j<span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>k<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>l<span class="token punctuation">,</span> m<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>n<span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>o<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>p<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>q<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>r<span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>s<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>a<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> backgroundDrawbleList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>aa<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>kk<span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>jj<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>dd<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ee<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ff<span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>gg<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>hh<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>mm<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>jj<span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>kk<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ll<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>mm<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>aa<span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ll<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>kk<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>dd<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ee<span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ff<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>gg<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> drawableJsons <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"aa.json"</span><span class="token punctuation">,</span> <span class="token string">"kk.json"</span><span class="token punctuation">,</span><span class="token string">"jj.json"</span><span class="token punctuation">,</span> <span class="token string">"dd.json"</span><span class="token punctuation">,</span> <span class="token string">"ee.json"</span><span class="token punctuation">,</span> <span class="token string">"ff.json"</span><span class="token punctuation">,</span><span class="token string">"gg.json"</span><span class="token punctuation">,</span> <span class="token string">"hh.json"</span><span class="token punctuation">,</span> <span class="token string">"mm.json"</span><span class="token punctuation">,</span> <span class="token string">"jj.json"</span><span class="token punctuation">,</span><span class="token string">"kk.json"</span><span class="token punctuation">,</span> <span class="token string">"ll.json"</span><span class="token punctuation">,</span> <span class="token string">"mm.json"</span><span class="token punctuation">,</span> <span class="token string">"aa.json"</span><span class="token punctuation">,</span><span class="token string">"ll.json"</span><span class="token punctuation">,</span> <span class="token string">"kk.json"</span><span class="token punctuation">,</span> <span class="token string">"dd.json"</span><span class="token punctuation">,</span> <span class="token string">"ee.json"</span><span class="token punctuation">,</span><span class="token string">"ff.json"</span><span class="token punctuation">,</span> <span class="token string">"gg.json"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> random <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Bitmap</span> mwatermark <span class="token operator">=</span> <span class="token class-name">MakeQRCodeUtil</span><span class="token punctuation">.</span><span class="token function">drawableToBitmap</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> drawableList<span class="token punctuation">[</span>random<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Bitmap</span> backgroundImage <span class="token operator">=</span> <span class="token class-name">MakeQRCodeUtil</span><span class="token punctuation">.</span><span class="token function">drawableToBitmap</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> backgroundDrawbleList<span class="token punctuation">[</span>random<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> fileName <span class="token operator">=</span> drawableJsons<span class="token punctuation">[</span>random<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token class-name">Util</span><span class="token punctuation">.</span><span class="token function">readAssertResource</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">BitmapPosition</span> mBitmapPosition <span class="token operator">=</span> <span class="token class-name">Util</span><span class="token punctuation">.</span><span class="token function">json2Bean</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">BitmapPosition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> size <span class="token operator">=</span> mBitmapPosition<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> x <span class="token operator">=</span> mBitmapPosition<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> y <span class="token operator">=</span> mBitmapPosition<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Bitmap</span> qrCode <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>qrCode <span class="token operator">=</span> <span class="token function">makeQRImage</span><span class="token punctuation">(</span><span class="token string">"www.bendaidai.top"</span><span class="token punctuation">,</span> mwatermark<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">WriterException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>qrCode<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>qrCode<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> bgWidth <span class="token operator">=</span> backgroundImage<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> bgHeight <span class="token operator">=</span> backgroundImage<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Bitmap</span> newmap <span class="token operator">=</span> <span class="token class-name">Bitmap</span><span class="token punctuation">.</span><span class="token function">createBitmap</span><span class="token punctuation">(</span>bgWidth<span class="token punctuation">,</span> bgHeight<span class="token punctuation">,</span><span class="token class-name">Bitmap<span class="token punctuation">.</span>Config</span><span class="token punctuation">.</span>ARGB_4444<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Paint</span> paint <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Canvas</span> canvas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Canvas</span><span class="token punctuation">(</span>newmap<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Rect</span> rect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>backgroundImage<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>rect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">*</span>x<span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">*</span>y<span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">*</span><span class="token punctuation">(</span>x <span class="token operator">+</span> size<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">*</span><span class="token punctuation">(</span>y <span class="token operator">+</span> size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>qrCode<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> rect<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span><span class="token punctuation">.</span>ALL_SAVE_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span>canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> newmap<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="第二种-小孩子的思路"><a href="#第二种-小孩子的思路" class="headerlink" title="第二种:小孩子的思路"></a>第二种:小孩子的思路</h2><p>不就是一个二维码下面放了一张图片吗?你把二维码黑色部分变成透明的颜色,让下面的背景颜色透过来不就行了吗? 1. 先生成一个二维码 2. 通过颜色矩阵来给二维码黑色的部分变成透明的 3. 把水印和二维码都放到背景图片的空白区域</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//我在这边拿到二维码</span><span class="token class-name">Drawable</span> qrCodeImage <span class="token operator">=</span> <span class="token function">getDrawable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">BitmapDrawable</span> bd <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">BitmapDrawable</span><span class="token punctuation">)</span> qrCodeImage<span class="token punctuation">;</span><span class="token comment">//获取位图</span>bitmap <span class="token operator">=</span> bd<span class="token punctuation">.</span><span class="token function">getBitmap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">ColorMatrix</span> colorMatrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColorMatrix</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>        <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mPaint<span class="token punctuation">.</span><span class="token function">setColorFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ColorMatrixColorFilter</span><span class="token punctuation">(</span>colorMatrix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Rect</span> rect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> background <span class="token operator">=</span> <span class="token function">dip2px</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mScale <span class="token operator">=</span> background <span class="token operator">/</span> <span class="token number">1000.0</span><span class="token punctuation">;</span>rect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>mBitmapPosition<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> mScale<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>mBitmapPosition<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> mScale<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>                <span class="token punctuation">(</span>mBitmapPosition<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> mBitmapPosition<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> mScale<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mBitmapPosition<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> mBitmapPosition<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> mScale<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Paint</span> paint <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>mwatermark<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> rect<span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> rect<span class="token punctuation">,</span> mPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setBackgroundResource</span><span class="token punctuation">(</span>mBackDrawable<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>上面只是部分代码,完整demo地址,<a href="https://github.com/adonis-lsh/VariousQRcode">https://github.com/adonis-lsh/VariousQRcode</a> 如果你在项目中使用,请记得开子线程.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;如何是你的二维码更有个性,比如微信,支付宝,他们都有切换不同样式的二维码,如何自己也实现一个呢? 二维码说白了就是上面的黑白点相当于计算机的0,1代码来储存的数据,所以我们可以改变黑色的点为其他深色的点,信息一样不会丢失,基于这些,我们就可以做一些花样的二维码出来了 废话不</summary>
      
    
    
    
    <category term="工作总结" scheme="https://www.lishenghui.top/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="Android" scheme="https://www.lishenghui.top/tags/Android/"/>
    
    <category term="二维码" scheme="https://www.lishenghui.top/tags/%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
    
    <category term="花样" scheme="https://www.lishenghui.top/tags/%E8%8A%B1%E6%A0%B7/"/>
    
    <category term="颜色矩阵" scheme="https://www.lishenghui.top/tags/%E9%A2%9C%E8%89%B2%E7%9F%A9%E9%98%B5/"/>
    
  </entry>
  
  <entry>
    <title>Android7.0适配之FileProvide(拍照,裁剪,应用安装)</title>
    <link href="https://www.lishenghui.top/2017/05/08/android7-fileprovide/"/>
    <id>https://www.lishenghui.top/2017/05/08/android7-fileprovide/</id>
    <published>2017-05-08T04:08:37.000Z</published>
    <updated>2021-06-09T11:49:21.704Z</updated>
    
    <content type="html"><![CDATA[<p>现在Android7.0在份额在不断的增加(个人感觉Android升级给用户带来最多的并不是更流畅而是更安全),许多应用都已经开始或者已经适配了Android7.0,如果你还不了解Android7.0有哪些新特性的小伙伴们,请<a href="https://developer.android.com/about/versions/nougat/android-7.0-samples.html">移步</a>,查看详细的介绍. 如果你的App是一个轻量级的应用,那么你很有可能会去调用系统的一些功能如拍照,裁剪,应用下载,安装,而不是依靠第三方库,那么你肯定用的到这个FileProvide.要了解一个你不熟悉的东西,最好的方式就是看<a href="https://developer.android.com/reference/android/support/v4/content/FileProvider.html">官网的API文档(教材)</a>,那么我们就来翻译一下大致内容(英语水平有限,大神勿喷,不好的地方还请指正):</p><h2 id="FileProviderAPI翻译"><a href="#FileProviderAPI翻译" class="headerlink" title="FileProviderAPI翻译"></a>FileProviderAPI翻译</h2><p>FileProvider是ContentProvider(有助于App共享文件更加安全的组件)的一个特殊的子类,通过 content:// Uri获取一个文件而不是file:/// Uri. 当你创建一个包含有content URI的Intent的时候,Content URI赋予你临时的读写权限.为了可以给一个目标app(原文client app,这里应该是目标App)发送一个特定的content URI,你也可以通过调用Intent.setFlags()去添加权限,这些权限一直有效,只要接收的Activity在栈中还存活着.要是跳转到Service,只要这个Service在运行,权限就有效. 相比较而言,用file:/// Uri来获取文件,你不得不修改系统底层的文件权限.在你改变文件权限之前,你授予权限,对于任何app都是可用的,所以授予这个级别的权限从根本上是不安全的.(就是liunx的rwx) content URI提高了文件安全访问的级别,使FileProvider成为Android的安全体系重要组成部分。</p><p>FileProvider 可大致分为下面几个部分</p><ol><li> 自定义一个FileProvider</li><li> 指定可用文件</li><li> 给文件生成content URI</li><li> 授予URI一个临时权限</li><li> 给另一个App提供URI</li></ol><h3 id="自定义一个FileProvider"><a href="#自定义一个FileProvider" class="headerlink" title="自定义一个FileProvider"></a>自定义一个FileProvider</h3><p>因为FileProvider的默认功能已经包含了将一个文件生成Content URI,所以,你不需要再在你的代码里去定义一个子类.相应的,你完全可以在你App的XML中通过 元素去指定一个FileProvider,包括指定FileProvider的组件,给 android.support.v4.content.FileProvider设置 android:name属性,基于你的控制域给 android:authorities设置一个属性.例如,如果你控制mydomain.com域,你应该用com.mydomain.fileprovider授权.设置 android:exported属性为false; FileProvider不需要成为一个共有的类,设置android:grantUriPermissions这个属性为true,则允许你给文件临时授权.例子</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span><span class="token punctuation">></span></span>    ...    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>provider</span>        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.support.v4.content.FileProvider<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>authorities</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mydomain.fileprovider<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>grantUriPermissions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        ...    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>provider</span><span class="token punctuation">></span></span>    ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果你想要重写FileProvider中默认的方法,请继承FileProvider,并且要在 元素下的android:name写上全类名</p><h3 id="指定可用文件"><a href="#指定可用文件" class="headerlink" title="指定可用文件"></a>指定可用文件</h3><p>一个FileProvide仅仅只能为你生成一个预先在目录中指定的文件的content URI,在XML中,用的子元素去指定一个目录,并指定它的存储区域和路径.例如,下面这个paths元素告诉FileProvider,你打算去访问你的images/子目录下面私有文件的content URI</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>paths</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>files-path</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my_images<span class="token punctuation">"</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>paths</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>元素必须有一个或多个下面类似的子标签 它表示你的app的内部存储区根目录的文件,该子目录的根路径等同于Context.getFileDir</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache-path</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>path<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>它表示你的app的内部缓存区根目录的文件,该子目录的根路径等同于getCacheDir()</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>external-path</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>path<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>它表示你app的外部缓存区根目录的文件,该子目录的根路径等同于Environment.getExternalStorageDirectory().</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>external-files-path</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>path<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>它表示你的app的外部存储区根目录的文件,该子目录的根路径等同于Context.getExternalFilesDir(null).</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>external-cache-path</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>path<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>它表示你的app的外部缓存区根目录的文件,该子目录的根路径等同于Context.getExternalCacheDir().</p><p>这些子元素都有相同的属性</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">name="name"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一个URI路径段,为了确保安全,这个值隐藏了你将要分享的子目录的名字,这个子目录的名字被包含在path的属性值中.</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">path ="path"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>你将要分享的子目录,虽然name属性是一个URI路径片段,但是path的值是一个真正的紫木槿的名字.注意这个值只能引用一个子目录,不能是一个或多个文件,你不能通过文件名单独的分享一个文件,也不能用通配符来指定某一类型的文件</p><p>你必须为你想要content URI文件的每个目录指定子元素.例如,这写xnl元素指定了两个目录</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>paths</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>files-path</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my_images<span class="token punctuation">"</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>files-path</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my_docs<span class="token punctuation">"</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>docs/<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>paths</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>把元素和它的子元素放到你项目中的一个xml中,例如,你可以把它们添加到一个叫res/xml/file_paths.xml文件中,为了让它和FileProvider联系起来,在定义好FileProvider的元素下添加一个 做为子元素,设置  元素的”android:name”属性为 android.support.FILE_PROVIDER_PATHS,设置”android:resource”元素的属性为@xml/file_paths(注意不要指定.xml扩展名).例如:</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>provider</span>    <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.support.v4.content.FileProvider<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>authorities</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mydomain.fileprovider<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>grantUriPermissions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span>        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.support.FILE_PROVIDER_PATHS<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/file_paths<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>provider</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="给文件生成content-URI"><a href="#给文件生成content-URI" class="headerlink" title="给文件生成content URI"></a>给文件生成content URI</h3><p>为了给另一个app通过content URI分享文件,因此,你的app不得不生成一个content URI.为了生成content URI,首先要给文件new File,然后传递File 到getUriForFile(),你可以通过 把getUriForFile()返回的content URI放在Intent中传递给另一个app,目标app收到这个content URI就能打开这个文件并且通过调用 ContentResolver.openFileDescriptor得到ParcelFileDescriptor进而读取它的内容.</p><p>例如,假设你的app正要通过拥有 com.mydomain.fileprovider权限的FileProvider给另一个app提供文件,你可以通过下面的代码去得到一个在images/ 子目录下的default_image.jpg的content URI:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">File</span> imagePath <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token function">getFilesDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"images"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">File</span> newFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>imagePath<span class="token punctuation">,</span> <span class="token string">"default_image.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Uri</span> contentUri <span class="token operator">=</span> <span class="token function">getUriForFile</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"com.mydomain.fileprovider"</span><span class="token punctuation">,</span> newFile<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>由于先前片段截取的结果,getUriForFile()返回这样一个结果: content://com.mydomain.fileprovider/my_images/default_image.jpg</p><h3 id="授予URI一个临时权限"><a href="#授予URI一个临时权限" class="headerlink" title="授予URI一个临时权限"></a>授予URI一个临时权限</h3><p>想要授予从getUriForFile()获取content URI一个访问权限,可以通过下面任意一种方式: 1. 把content:// Uri传入 Context.grantUriPermission(package, Uri, mode_flags) 方法中,用你想要的模式标签,这将授予content URI指定的包临时访问权限,你可以把mode_flags参数的值设置为 FLAG_GRANT_READ_URI_PERMISSION,FLAG_GRANT_WRITE_URI_PERMISSION ,或者都设置上.这个授权将在你调用revokeUriPermission()或者重启设置之前一直有效. 2. 通过Intent调用setData()把content URI放进去 3. 接下来,调用Intent.setFlags()设置为FLAG_GRANT_READ_URI_PERMISSION,FLAG_GRANT_WRITE_URI_PERMISSION,至少一个. 4. 最后,发送Intent到另一个app,大多数情况下,你可通过调用setResult()来实现它. 5. 在接受方Activity在栈中存活的情况下,被赋予Intent权限中仍然有效.当栈被销毁的时候,权限将自动被移除.权限将自动扩展到该app的其他组件,并授权给其中的一个Activy.</p><h3 id="给另一个App提供URI"><a href="#给另一个App提供URI" class="headerlink" title="给另一个App提供URI"></a>给另一个App提供URI</h3><p>有各种各样的方式去吧一个文件的content URI提供给目标app.一个通用的方式是通过调用startActivityResult()有目标app启动你的app,目标app给你的app发送一个Intent去启动你的一个Activity,对此,你的app可以及时的给目标app返回一个content URI或者提供一个界面供用户选择文件.在最后一种情况下,一旦用户选择了文件,你的app就能返回它的content URI.以上联众情况,你的app都可以通过setREsult()发送包含有content URI的Intent</p><p>你也可以把content URI放到ClipData对象中,然后把对象添加到Intent中发送给你的目标app.要做到这一点,调用Intent.setClipData().当你用这个方法的时候,你能添加多种ClipData对象给Intent,每一个都有自己的content URI,当你调用通过Intent调用Intent.setFlags()设置临时权限的时候,所有的content URI都将有相同的权限.</p><p>注：该Intent.setClipData()方法只适用于平台版本16（安卓4.1）及更高版本。如果你想保持与以前版本的兼容性，你应该在一个时间发送一个内容URI Intent。设置行动ACTION_SEND，并通过调用把URI数据 setData()。</p><h2 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h2><p><img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-5-8/21600260-file_1494215797284_133b6.gif" alt="这里写图片描述"></p><h2 id="裁剪"><a href="#裁剪" class="headerlink" title="裁剪"></a>裁剪</h2><p>先看一个正常的在系统相册选取图片然后裁剪的例子 <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-5-8/76828988-file_1494208163394_41ce.png"></p><p>我这面path里面””,说明是根路径,这里我只是为了省事一点,当然你可以写上要共享目录,整体xml的意思的就是我要共享外部储存的路径 <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-5-8/49348729-file_1494208230355_fe73.png"></p><p>下面是正常的裁剪:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@AfterPermissionGranted</span><span class="token punctuation">(</span>RC_STORAGE_PREM<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">cropImage</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    mPerms <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">Manifest</span><span class="token punctuation">.</span>permission<span class="token punctuation">.</span>READ_EXTERNAL_STORAGE<span class="token punctuation">,</span><span class="token class-name">Manifest</span><span class="token punctuation">.</span>permission<span class="token punctuation">.</span>WRITE_EXTERNAL_STORAGE<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">EasyPermissions</span><span class="token punctuation">.</span><span class="token function">hasPermissions</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> mPerms<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">Intent</span><span class="token punctuation">.</span>ACTION_PICK<span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token string">"image/*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">startActivityForResult</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span><span class="token class-name">SelectPhoto</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// Ask for one permission</span>        <span class="token class-name">EasyPermissions</span><span class="token punctuation">.</span><span class="token function">requestPermissions</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">getString</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>tishi<span class="token punctuation">)</span><span class="token punctuation">,</span>                RC_STORAGE_PREM<span class="token punctuation">,</span> mPerms<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onActivityResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token keyword">int</span> resultCode<span class="token punctuation">,</span> <span class="token class-name">Intent</span> data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onActivityResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> resultCode<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>requestCode<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token class-name">SelectPhoto</span><span class="token operator">:</span>                <span class="token class-name">Uri</span> uri <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> uri<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">crop</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span><span class="token class-name">CropPhoto</span> <span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token class-name">CropPhoto</span><span class="token operator">:</span>                <span class="token class-name">Bitmap</span> bitmap <span class="token operator">=</span> <span class="token class-name">BitmapFactory</span><span class="token punctuation">.</span><span class="token function">decodeFile</span><span class="token punctuation">(</span><span class="token function">getPath</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mImageView<span class="token punctuation">.</span><span class="token function">setImageBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">crop</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">,</span> <span class="token keyword">int</span> tag<span class="token punctuation">,</span> <span class="token keyword">int</span> aspectX<span class="token punctuation">,</span> <span class="token keyword">int</span> aspectY<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 裁剪图片意图</span>    <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">"com.android.camera.action.CROP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    intent<span class="token punctuation">.</span><span class="token function">setDataAndType</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> <span class="token string">"image/*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"crop"</span><span class="token punctuation">,</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 裁剪框的比例，1：1</span>    intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"aspectX"</span><span class="token punctuation">,</span> aspectX<span class="token punctuation">)</span><span class="token punctuation">;</span>    intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"aspectY"</span><span class="token punctuation">,</span> aspectY<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 裁剪后输出图片的尺寸大小</span>    intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"outputX"</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"outputY"</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"outputFormat"</span><span class="token punctuation">,</span> <span class="token string">"JPEG"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 图片格式</span>    intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"noFaceDetection"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 取消人脸识别</span>    intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"return-data"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token class-name">MediaStore</span><span class="token punctuation">.</span>EXTRA_OUTPUT<span class="token punctuation">,</span> <span class="token function">getCachePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"Cache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 开启一个带有返回值的Activity，请求码为PHOTO_REQUEST_CUT</span>    <span class="token function">startActivityForResult</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span> tag<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getCachePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">File</span> cacheDir<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span>Environment</span><span class="token punctuation">.</span><span class="token function">getExternalStorageState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span>Environment</span><span class="token punctuation">.</span>MEDIA_MOUNTED<span class="token punctuation">)</span><span class="token punctuation">)</span>        cacheDir <span class="token operator">=</span> <span class="token function">getExternalCacheDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        cacheDir <span class="token operator">=</span> <span class="token function">getCacheDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cacheDir<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        cacheDir<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> cacheDir<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getPath</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>  data <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token class-name">MediaStore<span class="token punctuation">.</span>Images<span class="token punctuation">.</span>Media</span><span class="token punctuation">.</span>DATA <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token class-name">CursorLoader</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CursorLoader</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> uri<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Cursor</span> cursor <span class="token operator">=</span> loader<span class="token punctuation">.</span><span class="token function">loadInBackground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> column_index <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getColumnIndexOrThrow</span><span class="token punctuation">(</span><span class="token class-name">MediaStore<span class="token punctuation">.</span>Images<span class="token punctuation">.</span>Media</span><span class="token punctuation">.</span>DATA<span class="token punctuation">)</span><span class="token punctuation">;</span>    cursor<span class="token punctuation">.</span><span class="token function">moveToFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>column_index<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>需要注意的地方: <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/17-5-8/4994057-file_1494212343452_648.png" alt="这里写图片描述"> 如果return-data,你写的是true,就是你返回的是数据不是路径,可能会报一个错误 android.os.TransactionTooLargeException: data parcel size 548172 bytes,原因是Intent携带的数据太大,不过正常的国内rom没有这个问题,为了安全起见,还是传路径好一点.</p><p>你以为这样就完了,当然不是:如果你调用的不是系统相册选取的图片,就会遇到问题,看刚才打印的log; <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/4867054-file_1494212904468_3657.png" alt="这里写图片描述"> 系统系统选取图片返回的是content开头的Uri,API24下是不会报错的,如果获取的图片路径是File开头的,此时用系统裁剪改怎么做呢? <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/57686936-file_1494214680509_10e2a.png" alt="这里写图片描述"></p><p>这样就完了吗?并不是,看我们前面的xml里面external-path,也就是外部路径,我们知道,现在的Android手机都把内置了储存空间,也是相当于一个SD卡,如果你有第二块SD呢,如三星的机型,如果传入的SD卡中的图片路径就会报错,why?因为我们我们前面写的external-path,表示的外部储存的路径,也就是你的机身储存那么路径又要怎么表示?前面我们翻译了文档,发现上面并没有说明这类情况,那么我们该怎么解决?看FileProvide的源码. <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/31473754-file_1494215027894_12dc.png" alt="这里写图片描述"> 发现里面除了文档上面说的那五类中路径没还有一个就是root-path,也就是整个手机的根路径,那就好办了 <img src="https://raw.githubusercontent.com/adonis-lsh/image_storage/master/22363625-file_1494215392429_108a4.png" alt="这里写图片描述"> 好了,关于系统剪裁就介绍到这里.<a href="https://github.com/adonis-lsh/FileProvideDemo">代码地址</a><a href="https://github.com/adonis-lsh/FileProvideDemo">https://github.com/adonis-lsh/FileProvideDemo</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;现在Android7.0在份额在不断的增加(个人感觉Android升级给用户带来最多的并不是更流畅而是更安全),许多应用都已经开始或者已经适配了Android7.0,如果你还不了解Android7.0有哪些新特性的小伙伴们,请&lt;a href=&quot;https://develop</summary>
      
    
    
    
    <category term="工作总结" scheme="https://www.lishenghui.top/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="Android7.0适配" scheme="https://www.lishenghui.top/tags/Android7-0%E9%80%82%E9%85%8D/"/>
    
    <category term="FileProvider" scheme="https://www.lishenghui.top/tags/FileProvider/"/>
    
    <category term="拍照" scheme="https://www.lishenghui.top/tags/%E6%8B%8D%E7%85%A7/"/>
    
    <category term="裁剪" scheme="https://www.lishenghui.top/tags/%E8%A3%81%E5%89%AA/"/>
    
  </entry>
  
  <entry>
    <title>解决DrawLayout侧拉菜单打开后,主页面仍然可以点击的问题</title>
    <link href="https://www.lishenghui.top/2017/03/13/android-bug02/"/>
    <id>https://www.lishenghui.top/2017/03/13/android-bug02/</id>
    <published>2017-03-13T04:02:57.000Z</published>
    <updated>2021-06-09T11:48:58.990Z</updated>
    
    <content type="html"><![CDATA[<p>转载,原出处:<a href="http://blog.csdn.net/qiang/_xi/article/details/49329679">http://blog.csdn.net/qiang\_xi/article/details/49329679</a></p><ol><li>如标题所述,当使用DrawerLayout建立侧滑菜单时,如果主布局是个listView或者其他可点击的控件,那么,当侧滑菜单被滑出来时,正常情况来说,点击侧滑菜单任何地方,应该和下层被遮盖一部分的主布局没有关系,自然下层的主布局不会响应点击事件,但是实际上,当侧滑菜单被滑出来时,下层被遮盖住的主布局依然可以响应点击事件.</li><li>当时想,应该和侧滑菜单的焦点获取有关,于是把listView的焦点设为false,把侧滑菜单的焦点设为true,但是并没有用,后来又想可能跟Clickable有关,于是又在DrawerLayout的xml布局中,写了clickable为true,但依然没有用,后来实在没招了,想想既然静态设置没用,那就动态监听,于是设置了DrawerLayout的setDrawerListener()监听方法,该监听方法会回调4个监听函数,onDrawerSlide,onDrawerOpened,onDrawerClosed和onDrawerStateChanged,我想要的就是在当侧滑菜单已经被打开时,即onDrawerOpened方法里进行监听,要做的就是当侧滑菜单已经打开时,只让侧滑菜单能够点击,下层主布局不做任何响应,于是我在这个方法里面设置了drawerView.setClickable(true),果然就好了,然后我又试了其他的一些方法,比如获取焦点啊,设置可按压啊,设置下层的listView不可点击啊,失去焦点啊什么的,</li><li>结果一概没用,只有设置clickable为true才有用,想想之前我也在xml布局中为drawerLayout设置了clickable为true,但是并没有用,为什么动态设置就有用了呢?现在我也没想明白,不过能解决我的问题也算可以,至于为什么动态设置有用,静态设置没用还是等以后研究懂了源码在说吧.</li><li>补充,我当时遇见的时候,去重写了DrawerLayout的有关触摸事件的方法,但是没有作用.会导致直接侧拉不出来 <pre class="line-numbers language-java" data-language="java"><code class="language-java">   mDlMenu<span class="token punctuation">.</span><span class="token function">addDrawerListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DrawerLayout<span class="token punctuation">.</span>DrawerListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span>     <span class="token function">onDrawerSlide</span><span class="token punctuation">(</span><span class="token class-name">View</span> drawerView<span class="token punctuation">,</span> <span class="token keyword">float</span> slideOffset<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDrawerOpened</span><span class="token punctuation">(</span><span class="token class-name">View</span> drawerView<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        drawerView<span class="token punctuation">.</span><span class="token function">setClickable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDrawerClosed</span><span class="token punctuation">(</span><span class="token class-name">View</span> drawerView<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDrawerStateChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> newState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;转载,原出处:&lt;a href=&quot;http://blog.csdn.net/qiang/_xi/article/details/49329679&quot;&gt;http://blog.csdn.net/qiang\_xi/article/details/49329679&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="转载文章" scheme="https://www.lishenghui.top/categories/%E8%BD%AC%E8%BD%BD%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="DrawerLayout" scheme="https://www.lishenghui.top/tags/DrawerLayout/"/>
    
    <category term="触摸事件" scheme="https://www.lishenghui.top/tags/%E8%A7%A6%E6%91%B8%E4%BA%8B%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>MusicUU开源项目框架搭建</title>
    <link href="https://www.lishenghui.top/2017/03/09/musicuu/"/>
    <id>https://www.lishenghui.top/2017/03/09/musicuu/</id>
    <published>2017-03-09T01:10:35.000Z</published>
    <updated>2021-06-09T11:53:23.111Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MusicUU"><a href="#MusicUU" class="headerlink" title="MusicUU"></a>MusicUU</h1><p>这是一款可以免费听音乐,下载音乐和MV的开源软件,本软件所有的数据均来自网络,本软件仅供交流(<a href="https://github.com/adonis-lsh/MusicUU">源码下载</a>)</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>在最新的AS2.3版本中,默认使用的是classpath ‘com.android.tools.build:gradle:2.2.3’和apt1.8有冲突,Dragger2将报错,所以请降级到2.2.0一下,有人已经向谷歌提交bug,估计很快就会解决.</p><h2 id="采用主流的MVP-Dragger2-retrofit-Rxjava-Databing的主流框架"><a href="#采用主流的MVP-Dragger2-retrofit-Rxjava-Databing的主流框架" class="headerlink" title="采用主流的MVP+Dragger2+retrofit+Rxjava+Databing的主流框架"></a>采用主流的MVP+Dragger2+retrofit+Rxjava+Databing的主流框架</h2><ul><li>  每天我都会抽出一些时间来完善这个项目,把主流的一些东西都给加入进入,预计两个月时间完成</li><li>  <a href="http://www.bendaidai.top/">http://www.bendaidai.top</a> 本人的博客,欢迎骚扰</li></ul><h2 id="配置gradle"><a href="#配置gradle" class="headerlink" title="配置gradle"></a>配置gradle</h2><ol><li> 为统一管理现在版本库中的各种依赖的第三方版本,所以我们应该学谷歌官方给我们的<a href="https://github.com/googlesamples/android-architecture">例子</a>那样,统一管理</li><li> 在project的gradle中我们这样写<img src="https://cdn.jsdelivr.net/gh/adonis-lsh/image_storage/img/2021/uu1.png"></li><li> 然后再app的gradle中我们就可以引用工程里面的版本号,并且这还有一个好处就是,在我们项目中引入其他库的时候,我们可以很方便的统一版本<img src="https://cdn.jsdelivr.net/gh/adonis-lsh/image_storage/img/2021/uu2.png"></li><li> 需要注意的是,dependencies这里面引用的内容需要用””双引号</li><li>有可能出现的问题:<img src="https://cdn.jsdelivr.net/gh/adonis-lsh/image_storage/img/2021/uu3.png"><br> 解决方法如下:<img src="https://cdn.jsdelivr.net/gh/adonis-lsh/image_storage/img/2021/uu4.png"><br> 上面是一比较正规的解决方案,我直接把他们给注释了,因为我不经常用单元测试,出问题的话我就直接debug调试</li></ol><h2 id="搭框架"><a href="#搭框架" class="headerlink" title="搭框架"></a>搭框架</h2><ol><li> 先来一个框架图:说明数据的流向<img src="https://cdn.jsdelivr.net/gh/adonis-lsh/image_storage/img/2021/uu5.png"></li><li> UML类图展示:<img src="https://cdn.jsdelivr.net/gh/adonis-lsh/image_storage/img/2021/uu6.jpeg"></li></ol><h2 id="建包"><a href="#建包" class="headerlink" title="建包"></a>建包</h2><p><img src="http://i.imgur.com/zSGYaZC.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MusicUU&quot;&gt;&lt;a href=&quot;#MusicUU&quot; class=&quot;headerlink&quot; title=&quot;MusicUU&quot;&gt;&lt;/a&gt;MusicUU&lt;/h1&gt;&lt;p&gt;这是一款可以免费听音乐,下载音乐和MV的开源软件,本软件所有的数据均来自网络,本软件仅供交流(&lt;a </summary>
      
    
    
    
    <category term="MusiccUU" scheme="https://www.lishenghui.top/categories/MusiccUU/"/>
    
    
    <category term="MusicUU" scheme="https://www.lishenghui.top/tags/MusicUU/"/>
    
    <category term="历程" scheme="https://www.lishenghui.top/tags/%E5%8E%86%E7%A8%8B/"/>
    
    <category term="开源" scheme="https://www.lishenghui.top/tags/%E5%BC%80%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>This Toast was not created with Toast.makeText()的解决办法</title>
    <link href="https://www.lishenghui.top/2017/02/07/this-toast-was-not-created-with-toast-maketext%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://www.lishenghui.top/2017/02/07/this-toast-was-not-created-with-toast-maketext%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2017-02-07T05:43:21.000Z</published>
    <updated>2021-06-09T07:38:55.326Z</updated>
    
    <content type="html"><![CDATA[<p>最近写程序想要自定义一下吐司的布局,这可难为坏我了,先上代码:</p><p><img src="https://cdn.jsdelivr.net/gh/adonis-lsh/image_storage/img/2021/toast2.png" alt="项目部分代码"></p><p>运行以后结果一直报This Toast was not created with Toast.makeText(),这就话的错误,楼主不服,各种谷歌,百度,各种偏方都试过了,但是还是解决不了,于是只能去看源码了: </p><p><img src="https://cdn.jsdelivr.net/gh/adonis-lsh/image_storage/img/2021/toast1.png" alt="Toast源码"></p><p><img src="https://cdn.jsdelivr.net/gh/adonis-lsh/image_storage/img/2021/toast4.png" alt="这里写图片描述"></p><p>报了上面的错,原来是因为tv为null,看到这里也许你就明白了,就是Toast的setText的方法设置的是系统自带布局里面的TextView上的文字,系统布局只有在makeText的时候才会被调用,上面我使用的时候,调用了new Toast()这个方法去初始化了一个Toast,并没有加载这个默认的布局,所以我在调用了toast.setView()以后,在设置setText肯定就报错了.</p><p>怎么解决呢?很简单,直接在布局上面放一个TextView就行了.</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@dimen/dp_100<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@dimen/dp_100<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/circular_black_bg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/toastText<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_centerInParent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>L<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/adonis-lsh/image_storage/img/2021/toast3.png" alt="xml预览图"></p><p>在代码中不要写toast.setText(),这么写:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>mToast <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     mToast<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> mToast <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Toast</span><span class="token punctuation">(</span>mContext<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">View</span> toastView <span class="token operator">=</span> <span class="token class-name">View</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>mContext<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>toast_view_layout<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> mToast<span class="token punctuation">.</span><span class="token function">setGravity</span><span class="token punctuation">(</span><span class="token class-name">Gravity</span><span class="token punctuation">.</span>CENTER<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> mToast<span class="token punctuation">.</span><span class="token function">setDuration</span><span class="token punctuation">(</span><span class="token class-name">Toast</span><span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">;</span> mToast<span class="token punctuation">.</span><span class="token function">setView</span><span class="token punctuation">(</span>toastView<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">TextView</span> tv_toast <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TextView</span><span class="token punctuation">)</span> mToast<span class="token punctuation">.</span><span class="token function">getView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>toastText<span class="token punctuation">)</span><span class="token punctuation">;</span> tv_toast<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span> mToast<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样就可以这正常的运行了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近写程序想要自定义一下吐司的布局,这可难为坏我了,先上代码:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/adonis-lsh/image_storage/img/2021/toast2.png&quot; alt=&quot;项目部分代码&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="工作总结" scheme="https://www.lishenghui.top/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
  </entry>
  
</feed>
